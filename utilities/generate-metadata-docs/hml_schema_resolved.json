{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MetadataObject",
  "anyOf": [
    {
      "$ref": "#/definitions/SubgraphObject"
    }
  ],
  "definitions": {
    "SubgraphObject": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SubgraphObject",
      "anyOf": [
        {
          "$id": "https://hasura.io/jsonschemas/metadata/v2/SubgraphObject",
          "title": "v2_SubgraphObject",
          "anyOf": [
            {
              "$id": "https://hasura.io/jsonschemas/metadata/v2/HasuraSubgraphObject",
              "title": "v2_HasuraSubgraphObject",
              "oneOf": [
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/v2/CompatibilityConfig",
                  "title": "v2_CompatibilityConfig",
                  "description": "The compatibility configuration of the Hasura metadata.",
                  "type": "object",
                  "required": ["date", "kind"],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "enum": ["CompatibilityConfig"]
                    },
                    "date": {
                      "description": "Any backwards incompatible changes made to Hasura DDN after this date won't impact the metadata.",
                      "allOf": [
                        {
                          "type": "string",
                          "format": "date"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/AuthConfig",
                  "title": "AuthConfig",
                  "description": "Definition of the authentication configuration used by the API server.",
                  "oneOf": [
                    {
                      "title": "AuthConfig1",
                      "description": "Definition of the authentication configuration v1, used by the API server.",
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["AuthConfig"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/AuthConfigV1",
                          "title": "AuthConfigV1",
                          "description": "Definition of the authentication configuration v1, used by the API server.",
                          "type": "object",
                          "required": ["mode"],
                          "properties": {
                            "allowRoleEmulationBy": {
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/Role",
                                  "title": "Role",
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "mode": {
                              "$id": "https://hasura.io/jsonschemas/metadata/AuthModeConfig",
                              "title": "AuthModeConfig",
                              "description": "The configuration for the authentication mode to use - webhook, JWT or NoAuth.",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": ["webhook"],
                                  "properties": {
                                    "webhook": {
                                      "$id": "https://hasura.io/jsonschemas/metadata/AuthHookConfig",
                                      "title": "AuthHookConfig",
                                      "description": "The configuration of the authentication webhook.",
                                      "examples": [
                                        {
                                          "url": "http://auth_hook:3050/validate-request",
                                          "method": "Post"
                                        }
                                      ],
                                      "type": "object",
                                      "required": ["method", "url"],
                                      "properties": {
                                        "url": {
                                          "description": "The URL of the authentication webhook.",
                                          "type": "string",
                                          "format": "uri"
                                        },
                                        "method": {
                                          "description": "The HTTP method to be used to make the request to the auth hook.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/AuthHookMethod",
                                              "title": "AuthHookMethod",
                                              "type": "string",
                                              "enum": ["Get", "Post"]
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": ["jwt"],
                                  "properties": {
                                    "jwt": {
                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTConfig",
                                      "title": "JWTConfig",
                                      "description": "JWT config according to which the incoming JWT will be verified and decoded to extract the session variable claims.",
                                      "examples": [
                                        {
                                          "audience": null,
                                          "issuer": null,
                                          "allowedSkew": null,
                                          "claimsConfig": {
                                            "namespace": {
                                              "claimsFormat": "Json",
                                              "location": "/claims.jwt.hasura.io"
                                            }
                                          },
                                          "tokenLocation": {
                                            "type": "BearerAuthorization"
                                          },
                                          "key": {
                                            "fixed": {
                                              "algorithm": "HS256",
                                              "key": {
                                                "value": "token"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "type": "object",
                                      "required": ["claimsConfig", "key", "tokenLocation"],
                                      "properties": {
                                        "audience": {
                                          "description": "Optional validation to check that the `aud` field is a member of the `audience` received, otherwise will throw error.",
                                          "type": ["array", "null"],
                                          "items": {
                                            "type": "string"
                                          },
                                          "uniqueItems": true
                                        },
                                        "issuer": {
                                          "description": "Optional validation to check that the `iss` field is a member of the `iss` received, otherwise will throw error.",
                                          "type": ["string", "null"]
                                        },
                                        "allowedSkew": {
                                          "description": "Allowed leeway (in seconds) to the `exp` validation to account for clock skew.",
                                          "type": ["integer", "null"],
                                          "format": "uint64",
                                          "minimum": 0
                                        },
                                        "claimsConfig": {
                                          "description": "Claims config. Either specified via `claims_mappings` or `claims_namespace_path`",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsConfig",
                                              "title": "JWTClaimsConfig",
                                              "description": "Config to describe how/where the engine should look for the claims within the decoded token.",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": ["locations"],
                                                  "properties": {
                                                    "locations": {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsMap",
                                                      "title": "JWTClaimsMap",
                                                      "description": "Can be used when Hasura claims are not all present in the single object, but individual claims are provided a JSON pointer within the decoded JWT and optionally a default value.",
                                                      "type": "object",
                                                      "required": ["x-hasura-allowed-roles", "x-hasura-default-role"],
                                                      "properties": {
                                                        "x-hasura-default-role": {
                                                          "description": "JSON pointer to lookup the default role within the decoded JWT.",
                                                          "allOf": [
                                                            {
                                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsMappingEntry_for_Role",
                                                              "title": "JWTClaimsMappingEntry",
                                                              "oneOf": [
                                                                {
                                                                  "description": "Literal value of the claims mapping",
                                                                  "type": "object",
                                                                  "required": ["literal"],
                                                                  "properties": {
                                                                    "literal": {
                                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                {
                                                                  "description": "Look up the Hasura claims at the specified JSON Pointer and provide a default value if the lookup fails.",
                                                                  "type": "object",
                                                                  "required": ["path"],
                                                                  "properties": {
                                                                    "path": {
                                                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsMappingPathEntry_for_Role",
                                                                      "title": "JWTClaimsMappingPathEntry",
                                                                      "description": "Entry to lookup the Hasura claims at the specified JSON Pointer",
                                                                      "type": "object",
                                                                      "required": ["path"],
                                                                      "properties": {
                                                                        "path": {
                                                                          "description": "JSON pointer to find the particular claim in the decoded JWT token.",
                                                                          "type": "string",
                                                                          "format": "JSON pointer"
                                                                        },
                                                                        "default": {
                                                                          "description": "Default value to be used when no value is found when looking up the value using the `path`.",
                                                                          "anyOf": [
                                                                            {
                                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                                                            },
                                                                            {
                                                                              "type": "null"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      "additionalProperties": false
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "x-hasura-allowed-roles": {
                                                          "description": "JSON pointer to lookup the allowed roles within the decoded JWT.",
                                                          "allOf": [
                                                            {
                                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsMappingEntry_for_Array_of_Role",
                                                              "title": "JWTClaimsMappingEntry",
                                                              "oneOf": [
                                                                {
                                                                  "description": "Literal value of the claims mapping",
                                                                  "type": "object",
                                                                  "required": ["literal"],
                                                                  "properties": {
                                                                    "literal": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                                                      }
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                },
                                                                {
                                                                  "description": "Look up the Hasura claims at the specified JSON Pointer and provide a default value if the lookup fails.",
                                                                  "type": "object",
                                                                  "required": ["path"],
                                                                  "properties": {
                                                                    "path": {
                                                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsMappingPathEntry_for_Array_of_Role",
                                                                      "title": "JWTClaimsMappingPathEntry",
                                                                      "description": "Entry to lookup the Hasura claims at the specified JSON Pointer",
                                                                      "type": "object",
                                                                      "required": ["path"],
                                                                      "properties": {
                                                                        "path": {
                                                                          "description": "JSON pointer to find the particular claim in the decoded JWT token.",
                                                                          "type": "string",
                                                                          "format": "JSON pointer"
                                                                        },
                                                                        "default": {
                                                                          "description": "Default value to be used when no value is found when looking up the value using the `path`.",
                                                                          "type": ["array", "null"],
                                                                          "items": {
                                                                            "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                                                          }
                                                                        }
                                                                      },
                                                                      "additionalProperties": false
                                                                    }
                                                                  },
                                                                  "additionalProperties": false
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "object",
                                                  "required": ["namespace"],
                                                  "properties": {
                                                    "namespace": {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsNamespace",
                                                      "title": "JWTClaimsNamespace",
                                                      "description": "Used when all of the Hasura claims are present in a single object within the decoded JWT.",
                                                      "type": "object",
                                                      "required": ["claimsFormat", "location"],
                                                      "properties": {
                                                        "claimsFormat": {
                                                          "description": "Format in which the Hasura claims will be present.",
                                                          "allOf": [
                                                            {
                                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTClaimsFormat",
                                                              "title": "JWTClaimsFormat",
                                                              "oneOf": [
                                                                {
                                                                  "description": "Claims will be in the JSON format.",
                                                                  "type": "string",
                                                                  "enum": ["Json"]
                                                                },
                                                                {
                                                                  "description": "Claims will be in the Stringified JSON format.",
                                                                  "type": "string",
                                                                  "enum": ["StringifiedJson"]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "location": {
                                                          "description": "Pointer to lookup the Hasura claims within the decoded claims.",
                                                          "type": "string",
                                                          "format": "JSON pointer"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "tokenLocation": {
                                          "description": "Source of the JWT authentication token.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTTokenLocation",
                                              "title": "JWTTokenLocation",
                                              "description": "Source of the Authorization token",
                                              "oneOf": [
                                                {
                                                  "title": "JWTBearerAuthorizationLocation",
                                                  "description": "Get the bearer token from the `Authorization` header.",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["BearerAuthorization"]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "JWTCookieLocation",
                                                  "description": "Get the token from the Cookie header under the specified cookie name.",
                                                  "type": "object",
                                                  "required": ["name", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["Cookie"]
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "JWTHeaderLocation",
                                                  "description": "Custom header from where the header should be parsed from.",
                                                  "type": "object",
                                                  "required": ["name", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["Header"]
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "key": {
                                          "description": "Mode according to which the JWT auth is configured.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/JWTKey",
                                              "title": "JWTKey",
                                              "description": "JWT key configuration according to which the incoming JWT will be decoded.",
                                              "oneOf": [
                                                {
                                                  "description": "JWT mode when the algorithm `type` and `key` is known",
                                                  "type": "object",
                                                  "required": ["fixed"],
                                                  "properties": {
                                                    "fixed": {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/JWTKeyConfig",
                                                      "title": "JWTKeyConfig",
                                                      "description": "JWT Secret config according to which the incoming JWT will be decoded.",
                                                      "type": "object",
                                                      "required": ["algorithm", "key"],
                                                      "properties": {
                                                        "algorithm": {
                                                          "description": "The algorithm used to decode the JWT.",
                                                          "allOf": [
                                                            {
                                                              "$id": "https://hasura.io/jsonschemas/metadata/Algorithm",
                                                              "title": "JWTAlgorithm",
                                                              "description": "The algorithm used to decode the JWT.",
                                                              "oneOf": [
                                                                {
                                                                  "description": "HMAC using SHA-256",
                                                                  "type": "string",
                                                                  "enum": ["HS256"]
                                                                },
                                                                {
                                                                  "description": "HMAC using SHA-384",
                                                                  "type": "string",
                                                                  "enum": ["HS384"]
                                                                },
                                                                {
                                                                  "description": "HMAC using SHA-512",
                                                                  "type": "string",
                                                                  "enum": ["HS512"]
                                                                },
                                                                {
                                                                  "description": "ECDSA using SHA-256",
                                                                  "type": "string",
                                                                  "enum": ["ES256"]
                                                                },
                                                                {
                                                                  "description": "ECDSA using SHA-384",
                                                                  "type": "string",
                                                                  "enum": ["ES384"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PKCS1-v1_5 using SHA-256",
                                                                  "type": "string",
                                                                  "enum": ["RS256"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PKCS1-v1_5 using SHA-384",
                                                                  "type": "string",
                                                                  "enum": ["RS384"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PKCS1-v1_5 using SHA-512",
                                                                  "type": "string",
                                                                  "enum": ["RS512"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PSS using SHA-256",
                                                                  "type": "string",
                                                                  "enum": ["PS256"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PSS using SHA-384",
                                                                  "type": "string",
                                                                  "enum": ["PS384"]
                                                                },
                                                                {
                                                                  "description": "RSASSA-PSS using SHA-512",
                                                                  "type": "string",
                                                                  "enum": ["PS512"]
                                                                },
                                                                {
                                                                  "description": "Edwards-curve Digital Signature Algorithm (EdDSA)",
                                                                  "type": "string",
                                                                  "enum": ["EdDSA"]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "key": {
                                                          "description": "The key to use for decoding the JWT.",
                                                          "allOf": [
                                                            {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/url/allOf/0"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "description": "JWT mode where the `type` and `key` parameters are obtained dynamically through JWK.",
                                                  "type": "object",
                                                  "required": ["jwkFromUrl"],
                                                  "properties": {
                                                    "jwkFromUrl": {
                                                      "type": "string",
                                                      "format": "uri"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": ["noAuth"],
                                  "properties": {
                                    "noAuth": {
                                      "$id": "https://hasura.io/jsonschemas/metadata/NoAuthConfig",
                                      "title": "NoAuthConfig",
                                      "description": "Configuration used when running engine without authentication",
                                      "examples": [
                                        {
                                          "role": "admin",
                                          "sessionVariables": {
                                            "x-hasura-user-id": "100"
                                          }
                                        }
                                      ],
                                      "type": "object",
                                      "required": ["role", "sessionVariables"],
                                      "properties": {
                                        "role": {
                                          "description": "role to assume whilst running the engine",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                            }
                                          ]
                                        },
                                        "sessionVariables": {
                                          "title": "SessionVariables",
                                          "description": "static session variables to use whilst running the engine",
                                          "type": "object",
                                          "additionalProperties": {
                                            "description": "Value of a session variable",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "AuthConfig2",
                      "description": "Definition of the authentication configuration v2, used by the API server.",
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["AuthConfig"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v2"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/AuthConfigV2",
                          "title": "AuthConfigV2",
                          "description": "Definition of the authentication configuration v2, used by the API server.",
                          "type": "object",
                          "required": ["mode"],
                          "properties": {
                            "mode": {
                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/mode"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            {
              "$id": "https://hasura.io/jsonschemas/metadata/OpenDdSubgraphObject",
              "title": "OpenDdSubgraphObject",
              "oneOf": [
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorLink",
                  "title": "DataConnectorLink",
                  "description": "Definition of a data connector, used to bring in sources of data and connect them to OpenDD models and commands.",
                  "examples": [
                    {
                      "kind": "DataConnectorLink",
                      "version": "v1",
                      "definition": {
                        "name": "data_connector",
                        "url": {
                          "singleUrl": {
                            "value": "http://data_connector:8100"
                          }
                        },
                        "headers": {},
                        "schema": {
                          "version": "v0.1",
                          "schema": {
                            "scalar_types": {},
                            "object_types": {},
                            "collections": [],
                            "functions": [],
                            "procedures": []
                          },
                          "capabilities": {
                            "version": "0.1.3",
                            "capabilities": {
                              "query": {
                                "nested_fields": {},
                                "variables": {}
                              },
                              "mutation": {}
                            }
                          }
                        }
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["DataConnectorLink"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorLinkV1",
                          "title": "DataConnectorLinkV1",
                          "description": "Definition of a data connector - version 1.",
                          "type": "object",
                          "required": ["name", "schema", "url"],
                          "properties": {
                            "name": {
                              "description": "The name of the data connector.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorName",
                                  "title": "DataConnectorName",
                                  "description": "The name of a data connector.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "url": {
                              "description": "The url(s) to access the data connector.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorUrlV1",
                                  "title": "DataConnectorUrlV1",
                                  "description": "A URL to access a data connector. This can be a single URL or a pair of read and write URLs.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": ["singleUrl"],
                                      "properties": {
                                        "singleUrl": {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/url/allOf/0"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "required": ["readWriteUrls"],
                                      "properties": {
                                        "readWriteUrls": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ReadWriteUrls",
                                          "title": "ReadWriteUrls",
                                          "description": "A pair of URLs to access a data connector, one for reading and one for writing.",
                                          "type": "object",
                                          "required": ["read", "write"],
                                          "properties": {
                                            "read": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/url/allOf/0"
                                            },
                                            "write": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/url/allOf/0"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "headers": {
                              "description": "Key value map of HTTP headers to be sent with each request to the data connector. This is meant for protocol level use between engine and the data connector.",
                              "default": {},
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/HttpHeaders",
                                  "title": "HttpHeaders",
                                  "description": "Key value map of HTTP headers to be sent with an HTTP request. The key is the header name and the value is a potential reference to an environment variable.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/url/allOf/0"
                                  }
                                }
                              ]
                            },
                            "schema": {
                              "description": "The schema of the data connector. This schema is used as the source of truth when serving requests and the live schema of the data connector is not looked up.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/VersionedSchemaAndCapabilities",
                                  "title": "VersionedSchemaAndCapabilities",
                                  "description": "Versioned schema and capabilities for a data connector.",
                                  "oneOf": [
                                    {
                                      "title": "SchemaAndCapabilitiesV01",
                                      "description": "Version 0.1 of schema and capabilities for a data connector.",
                                      "type": "object",
                                      "required": ["capabilities", "schema", "version"],
                                      "properties": {
                                        "version": {
                                          "type": "string",
                                          "enum": ["v0.1"]
                                        },
                                        "schema": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "Schema Response",
                                          "type": "object",
                                          "required": [
                                            "collections",
                                            "functions",
                                            "object_types",
                                            "procedures",
                                            "scalar_types"
                                          ],
                                          "properties": {
                                            "scalar_types": {
                                              "description": "A list of scalar types which will be used as the types of collection columns",
                                              "type": "object",
                                              "additionalProperties": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ScalarType"
                                              }
                                            },
                                            "object_types": {
                                              "description": "A list of object types which can be used as the types of arguments, or return types of procedures. Names should not overlap with scalar type names.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ObjectType"
                                              }
                                            },
                                            "collections": {
                                              "description": "Collections which are available for queries",
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/CollectionInfo"
                                              }
                                            },
                                            "functions": {
                                              "description": "Functions (i.e. collections which return a single column and row)",
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/FunctionInfo"
                                              }
                                            },
                                            "procedures": {
                                              "description": "Procedures which are available for execution as part of mutations",
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ProcedureInfo"
                                              }
                                            }
                                          },
                                          "definitions": {
                                            "ScalarType": {
                                              "title": "Scalar Type",
                                              "description": "The definition of a scalar type, i.e. types that can be used as the types of columns.",
                                              "type": "object",
                                              "required": ["aggregate_functions", "comparison_operators"],
                                              "properties": {
                                                "representation": {
                                                  "description": "A description of valid values for this scalar type. Defaults to `TypeRepresentation::JSON` if omitted",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/TypeRepresentation"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "aggregate_functions": {
                                                  "description": "A map from aggregate function names to their definitions. Result type names must be defined scalar types declared in ScalarTypesCapabilities.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/AggregateFunctionDefinition"
                                                  }
                                                },
                                                "comparison_operators": {
                                                  "description": "A map from comparison operator names to their definitions. Argument type names must be defined scalar types declared in ScalarTypesCapabilities.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ComparisonOperatorDefinition"
                                                  }
                                                }
                                              }
                                            },
                                            "TypeRepresentation": {
                                              "title": "Type Representation",
                                              "description": "Representations of scalar types",
                                              "oneOf": [
                                                {
                                                  "description": "JSON booleans",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["boolean"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Any JSON string",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["string"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Any JSON number",
                                                  "deprecated": true,
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["number"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Any JSON number, with no decimal part",
                                                  "deprecated": true,
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["integer"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A 8-bit signed integer with a minimum value of -2^7 and a maximum value of 2^7 - 1",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["int8"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A 16-bit signed integer with a minimum value of -2^15 and a maximum value of 2^15 - 1",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["int16"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A 32-bit signed integer with a minimum value of -2^31 and a maximum value of 2^31 - 1",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["int32"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A 64-bit signed integer with a minimum value of -2^63 and a maximum value of 2^63 - 1",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["int64"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "An IEEE-754 single-precision floating-point number",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["float32"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "An IEEE-754 double-precision floating-point number",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["float64"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Arbitrary-precision integer string",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["biginteger"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Arbitrary-precision decimal string",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["bigdecimal"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "UUID string (8-4-4-4-12)",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["uuid"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "ISO 8601 date",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["date"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "ISO 8601 timestamp",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["timestamp"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "ISO 8601 timestamp-with-timezone",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["timestamptz"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "GeoJSON, per RFC 7946",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["geography"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "GeoJSON Geometry object, per RFC 7946",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["geometry"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Base64-encoded bytes",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["bytes"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "Arbitrary JSON",
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["json"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "One of the specified string values",
                                                  "type": "object",
                                                  "required": ["one_of", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["enum"]
                                                    },
                                                    "one_of": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "AggregateFunctionDefinition": {
                                              "title": "Aggregate Function Definition",
                                              "description": "The definition of an aggregation function on a scalar type",
                                              "type": "object",
                                              "required": ["result_type"],
                                              "properties": {
                                                "result_type": {
                                                  "description": "The scalar or object type of the result of this function",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "Type": {
                                              "title": "Type",
                                              "description": "Types track the valid representations of values as JSON",
                                              "oneOf": [
                                                {
                                                  "description": "A named type",
                                                  "type": "object",
                                                  "required": ["name", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["named"]
                                                    },
                                                    "name": {
                                                      "description": "The name can refer to a primitive type or a scalar type",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A nullable type",
                                                  "type": "object",
                                                  "required": ["type", "underlying_type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["nullable"]
                                                    },
                                                    "underlying_type": {
                                                      "description": "The type of the non-null inhabitants of this type",
                                                      "allOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "An array type",
                                                  "type": "object",
                                                  "required": ["element_type", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["array"]
                                                    },
                                                    "element_type": {
                                                      "description": "The type of the elements of the array",
                                                      "allOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "description": "A predicate type for a given object type",
                                                  "type": "object",
                                                  "required": ["object_type_name", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["predicate"]
                                                    },
                                                    "object_type_name": {
                                                      "description": "The object type name",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "ComparisonOperatorDefinition": {
                                              "title": "Comparison Operator Definition",
                                              "description": "The definition of a comparison operator on a scalar type",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["equal"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": ["type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["in"]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": ["argument_type", "type"],
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": ["custom"]
                                                    },
                                                    "argument_type": {
                                                      "description": "The type of the argument to this operator",
                                                      "allOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "ObjectType": {
                                              "title": "Object Type",
                                              "description": "The definition of an object type",
                                              "type": "object",
                                              "required": ["fields"],
                                              "properties": {
                                                "description": {
                                                  "description": "Description of this type",
                                                  "type": ["string", "null"]
                                                },
                                                "fields": {
                                                  "description": "Fields defined on this object type",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ObjectField"
                                                  }
                                                }
                                              }
                                            },
                                            "ObjectField": {
                                              "title": "Object Field",
                                              "description": "The definition of an object field",
                                              "type": "object",
                                              "required": ["type"],
                                              "properties": {
                                                "description": {
                                                  "description": "Description of this field",
                                                  "type": ["string", "null"]
                                                },
                                                "type": {
                                                  "description": "The type of this field",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                    }
                                                  ]
                                                },
                                                "arguments": {
                                                  "description": "The arguments available to the field - Matches implementation from CollectionInfo",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ArgumentInfo"
                                                  }
                                                }
                                              }
                                            },
                                            "ArgumentInfo": {
                                              "title": "Argument Info",
                                              "type": "object",
                                              "required": ["type"],
                                              "properties": {
                                                "description": {
                                                  "description": "Argument description",
                                                  "type": ["string", "null"]
                                                },
                                                "type": {
                                                  "description": "The name of the type of this argument",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "CollectionInfo": {
                                              "title": "Collection Info",
                                              "type": "object",
                                              "required": [
                                                "arguments",
                                                "foreign_keys",
                                                "name",
                                                "type",
                                                "uniqueness_constraints"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "description": "The name of the collection\n\nNote: these names are abstract - there is no requirement that this name correspond to the name of an actual collection in the database.",
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "Description of the collection",
                                                  "type": ["string", "null"]
                                                },
                                                "arguments": {
                                                  "description": "Any arguments that this collection requires",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ArgumentInfo"
                                                  }
                                                },
                                                "type": {
                                                  "description": "The name of the collection's object type",
                                                  "type": "string"
                                                },
                                                "uniqueness_constraints": {
                                                  "description": "Any uniqueness constraints enforced on this collection",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/UniquenessConstraint"
                                                  }
                                                },
                                                "foreign_keys": {
                                                  "description": "Any foreign key constraints enforced on this collection",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ForeignKeyConstraint"
                                                  }
                                                }
                                              }
                                            },
                                            "UniquenessConstraint": {
                                              "title": "Uniqueness Constraint",
                                              "type": "object",
                                              "required": ["unique_columns"],
                                              "properties": {
                                                "unique_columns": {
                                                  "description": "A list of columns which this constraint requires to be unique",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "ForeignKeyConstraint": {
                                              "title": "Foreign Key Constraint",
                                              "type": "object",
                                              "required": ["column_mapping", "foreign_collection"],
                                              "properties": {
                                                "column_mapping": {
                                                  "description": "The columns on which you want want to define the foreign key.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                },
                                                "foreign_collection": {
                                                  "description": "The name of a collection",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "FunctionInfo": {
                                              "title": "Function Info",
                                              "type": "object",
                                              "required": ["arguments", "name", "result_type"],
                                              "properties": {
                                                "name": {
                                                  "description": "The name of the function",
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "Description of the function",
                                                  "type": ["string", "null"]
                                                },
                                                "arguments": {
                                                  "description": "Any arguments that this collection requires",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ArgumentInfo"
                                                  }
                                                },
                                                "result_type": {
                                                  "description": "The name of the function's result type",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "ProcedureInfo": {
                                              "title": "Procedure Info",
                                              "type": "object",
                                              "required": ["arguments", "name", "result_type"],
                                              "properties": {
                                                "name": {
                                                  "description": "The name of the procedure",
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "description": "Column description",
                                                  "type": ["string", "null"]
                                                },
                                                "arguments": {
                                                  "description": "Any arguments that this collection requires",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/ArgumentInfo"
                                                  }
                                                },
                                                "result_type": {
                                                  "description": "The name of the result type",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/schema/definitions/Type"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "capabilities": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "Capabilities Response",
                                          "type": "object",
                                          "required": ["capabilities", "version"],
                                          "properties": {
                                            "version": {
                                              "type": "string"
                                            },
                                            "capabilities": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/Capabilities"
                                            }
                                          },
                                          "definitions": {
                                            "Capabilities": {
                                              "title": "Capabilities",
                                              "description": "Describes the features of the specification which a data connector implements.",
                                              "type": "object",
                                              "required": ["mutation", "query"],
                                              "properties": {
                                                "query": {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/QueryCapabilities"
                                                },
                                                "mutation": {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/MutationCapabilities"
                                                },
                                                "relationships": {
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/RelationshipCapabilities"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "QueryCapabilities": {
                                              "title": "Query Capabilities",
                                              "type": "object",
                                              "properties": {
                                                "aggregates": {
                                                  "description": "Does the connector support aggregate queries",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "variables": {
                                                  "description": "Does the connector support queries which use variables",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "explain": {
                                                  "description": "Does the connector support explaining queries",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "nested_fields": {
                                                  "description": "Does the connector support nested fields",
                                                  "default": {},
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/NestedFieldCapabilities"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "LeafCapability": {
                                              "description": "A unit value to indicate a particular leaf capability is supported. This is an empty struct to allow for future sub-capabilities.",
                                              "type": "object"
                                            },
                                            "NestedFieldCapabilities": {
                                              "title": "Nested Field Capabilities",
                                              "type": "object",
                                              "properties": {
                                                "filter_by": {
                                                  "description": "Does the connector support filtering by values of nested fields",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "order_by": {
                                                  "description": "Does the connector support ordering by values of nested fields",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "aggregates": {
                                                  "description": "Does the connector support aggregating values within nested fields",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "MutationCapabilities": {
                                              "title": "Mutation Capabilities",
                                              "type": "object",
                                              "properties": {
                                                "transactional": {
                                                  "description": "Does the connector support executing multiple mutations in a transaction.",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "explain": {
                                                  "description": "Does the connector support explaining mutations",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "RelationshipCapabilities": {
                                              "title": "Relationship Capabilities",
                                              "type": "object",
                                              "properties": {
                                                "relation_comparisons": {
                                                  "description": "Does the connector support comparisons that involve related collections (ie. joins)?",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "order_by_aggregate": {
                                                  "description": "Does the connector support ordering by an aggregated array relationship?",
                                                  "anyOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/schema/allOf/0/oneOf/0/properties/capabilities/definitions/LeafCapability"
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "argumentPresets": {
                              "description": "Argument presets that applies to all functions and procedures of this data connector. Defaults to no argument presets.",
                              "default": [],
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorArgumentPreset",
                                "title": "DataConnectorArgumentPreset",
                                "description": "An argument preset that can be applied to all functions/procedures of a connector",
                                "type": "object",
                                "required": ["argument", "value"],
                                "properties": {
                                  "argument": {
                                    "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorArgumentName",
                                    "title": "DataConnectorArgumentName",
                                    "description": "The name of an argument as defined by a data connector.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorArgumentPresetValue",
                                    "title": "DataConnectorArgumentPresetValue",
                                    "description": "The value of a data connector argument preset.",
                                    "type": "object",
                                    "required": ["httpHeaders"],
                                    "properties": {
                                      "httpHeaders": {
                                        "description": "HTTP headers that can be preset from request",
                                        "allOf": [
                                          {
                                            "$id": "https://hasura.io/jsonschemas/metadata/HttpHeadersPreset",
                                            "title": "HttpHeadersPreset",
                                            "description": "Configuration of what HTTP request headers should be forwarded to a data connector.",
                                            "type": "object",
                                            "required": ["additional", "forward"],
                                            "properties": {
                                              "forward": {
                                                "description": "List of HTTP headers that should be forwarded from HTTP requests",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "additional": {
                                                "description": "Additional headers that should be forwarded, from other contexts",
                                                "allOf": [
                                                  {
                                                    "$id": "https://hasura.io/jsonschemas/metadata/AdditionalHttpHeaders",
                                                    "title": "AdditionalHttpHeaders",
                                                    "description": "Key value map of HTTP headers to be forwarded in the headers argument of a data connector request.",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/mapping/items/properties/source/allOf/0/oneOf/0/properties/value"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "responseHeaders": {
                              "description": "HTTP response headers configuration that is forwarded from a data connector to the client.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ResponseHeaders",
                                  "title": "ResponseHeaders",
                                  "description": "Configuration of what HTTP response headers should be forwarded from a data connector to the client in HTTP response.",
                                  "type": "object",
                                  "required": ["forwardHeaders", "headersField", "resultField"],
                                  "properties": {
                                    "headersField": {
                                      "description": "Name of the field in the NDC function/procedure's result which contains the response headers",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/responseHeaders/anyOf/0/properties/resultField/allOf/0"
                                        }
                                      ]
                                    },
                                    "resultField": {
                                      "description": "Name of the field in the NDC function/procedure's result which contains the result",
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorColumnName",
                                          "title": "DataConnectorColumnName",
                                          "description": "The name of a column in a data connector.",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "forwardHeaders": {
                                      "description": "List of actual HTTP response headers from the data connector to be set as response headers",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/GraphqlConfig",
                  "title": "GraphqlConfig",
                  "description": "GraphqlConfig object tells us two things:\n\n1. How the Graphql schema should look like for the features (`where`, `order_by` etc) Hasura provides 2. What features should be enabled/disabled across the subgraphs",
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["GraphqlConfig"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/GraphqlConfigV1",
                          "title": "GraphqlConfigV1",
                          "description": "GraphqlConfig object tells us two things:\n\n1. How the Graphql schema should look like for the features (`where`, `order_by` etc) Hasura provides 2. What features should be enabled/disabled across the subgraphs",
                          "type": "object",
                          "required": ["mutation", "query"],
                          "properties": {
                            "query": {
                              "$id": "https://hasura.io/jsonschemas/metadata/QueryGraphqlConfig",
                              "title": "QueryGraphqlConfig",
                              "description": "Configuration for the GraphQL schema of Hasura features for queries. `None` means disable the feature.",
                              "type": "object",
                              "required": ["rootOperationTypeName"],
                              "properties": {
                                "rootOperationTypeName": {
                                  "description": "The name of the root operation type name for queries. Usually `query`.",
                                  "allOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/GraphQlTypeName",
                                      "title": "GraphQlTypeName",
                                      "description": "The name of a GraphQL type.",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "argumentsInput": {
                                  "description": "Configuration for the arguments input.",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/ArgumentsInputGraphqlConfig",
                                      "title": "ArgumentsInputGraphqlConfig",
                                      "description": "Configuration for the arguments input.",
                                      "type": "object",
                                      "required": ["fieldName"],
                                      "properties": {
                                        "fieldName": {
                                          "description": "The name of arguments passing field. Usually `args`.",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "limitInput": {
                                  "description": "Configuration for the limit operation.",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/LimitInputGraphqlConfig",
                                      "title": "LimitInputGraphqlConfig",
                                      "description": "Configuration for the limit operation.",
                                      "type": "object",
                                      "required": ["fieldName"],
                                      "properties": {
                                        "fieldName": {
                                          "description": "The name of the limit operation field. Usually `limit`.",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "offsetInput": {
                                  "description": "Configuration for the offset operation.",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/OffsetInputGraphqlConfig",
                                      "title": "OffsetInputGraphqlConfig",
                                      "description": "Configuration for the offset operation.",
                                      "type": "object",
                                      "required": ["fieldName"],
                                      "properties": {
                                        "fieldName": {
                                          "description": "The name of the offset operation field. Usually `offset`.",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "filterInput": {
                                  "description": "Configuration for the filter operation.",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/FilterInputGraphqlConfig",
                                      "title": "FilterInputGraphqlConfig",
                                      "description": "Configuration for the filter operation.",
                                      "type": "object",
                                      "required": ["fieldName", "operatorNames"],
                                      "properties": {
                                        "fieldName": {
                                          "description": "The name of the filter operation field. Usually `where`.",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        },
                                        "operatorNames": {
                                          "description": "The names of built-in filter operators.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/FilterInputOperatorNames",
                                              "title": "FilterInputOperatorNames",
                                              "description": "The names of built-in filter operators.",
                                              "type": "object",
                                              "required": ["and", "isNull", "not", "or"],
                                              "properties": {
                                                "and": {
                                                  "description": "The name of the `and` operator. Usually `_and`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                },
                                                "or": {
                                                  "description": "The name of the `or` operator. Usually `_or`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                },
                                                "not": {
                                                  "description": "The name of the `not` operator. Usually `_not`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                },
                                                "isNull": {
                                                  "description": "The name of the `is null` operator. Usually `_is_null`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "orderByInput": {
                                  "description": "Configuration for the sort operation.",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/OrderByInputGraphqlConfig",
                                      "title": "OrderByInputGraphqlConfig",
                                      "description": "Configuration for the sort operation.",
                                      "type": "object",
                                      "required": ["enumDirectionValues", "enumTypeNames", "fieldName"],
                                      "properties": {
                                        "fieldName": {
                                          "description": "The name of the filter operation field. Usually `order_by`.",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        },
                                        "enumDirectionValues": {
                                          "description": "The names of the direction parameters.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/OrderByDirectionValues",
                                              "title": "OrderByDirectionValues",
                                              "description": "The names of the direction parameters.",
                                              "type": "object",
                                              "required": ["asc", "desc"],
                                              "properties": {
                                                "asc": {
                                                  "description": "The name of the ascending parameter. Usually `Asc`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                },
                                                "desc": {
                                                  "description": "The name of the descending parameter. Usually `Desc`.",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          ]
                                        },
                                        "enumTypeNames": {
                                          "type": "array",
                                          "items": {
                                            "$id": "https://hasura.io/jsonschemas/metadata/OrderByEnumTypeName",
                                            "title": "OrderByEnumTypeName",
                                            "description": "Type name for a sort directions enum, with the given set of possible directions.",
                                            "type": "object",
                                            "required": ["directions", "typeName"],
                                            "properties": {
                                              "directions": {
                                                "type": "array",
                                                "items": {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/OrderByDirection",
                                                  "title": "OrderByDirection",
                                                  "description": "Sort direction.",
                                                  "oneOf": [
                                                    {
                                                      "description": "Ascending.",
                                                      "type": "string",
                                                      "enum": ["Asc"]
                                                    },
                                                    {
                                                      "description": "Descending.",
                                                      "type": "string",
                                                      "enum": ["Desc"]
                                                    }
                                                  ]
                                                }
                                              },
                                              "typeName": {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "aggregate": {
                                  "description": "Configuration for aggregates",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/AggregateGraphqlConfig",
                                      "title": "AggregateGraphqlConfig",
                                      "description": "Configuration for the GraphQL schema for aggregates.",
                                      "type": "object",
                                      "required": ["countDistinctFieldName", "countFieldName", "filterInputFieldName"],
                                      "properties": {
                                        "filterInputFieldName": {
                                          "description": "The name of the filter input parameter of aggregate fields and field name in predicates",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        },
                                        "countFieldName": {
                                          "description": "The name of the _count field used for the count aggregate function",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        },
                                        "countDistinctFieldName": {
                                          "description": "The name of the _count_distinct field used for the count distinct aggregate function",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "mutation": {
                              "$id": "https://hasura.io/jsonschemas/metadata/MutationGraphqlConfig",
                              "title": "MutationGraphqlConfig",
                              "description": "Configuration for the GraphQL schema of Hasura features for mutations.",
                              "type": "object",
                              "required": ["rootOperationTypeName"],
                              "properties": {
                                "rootOperationTypeName": {
                                  "description": "The name of the root operation type name for mutations. Usually `mutation`.",
                                  "allOf": [
                                    {
                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "apolloFederation": {
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/GraphqlApolloFederationConfig",
                                  "title": "GraphqlApolloFederationConfig",
                                  "description": "Configuration for the GraphQL schema of Hasura features for Apollo Federation.",
                                  "type": "object",
                                  "required": ["enableRootFields"],
                                  "properties": {
                                    "enableRootFields": {
                                      "description": "Adds the `_entities` and `_services` root fields required for Apollo Federation.",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/ObjectType",
                  "title": "ObjectType",
                  "description": "Definition of a user-defined Open DD object type.",
                  "examples": [
                    {
                      "kind": "ObjectType",
                      "version": "v1",
                      "definition": {
                        "name": "Author",
                        "fields": [
                          {
                            "name": "author_id",
                            "type": "Int!",
                            "description": "The id of the author"
                          },
                          {
                            "name": "first_name",
                            "type": "String",
                            "description": "The first name of the author"
                          },
                          {
                            "name": "last_name",
                            "type": "String",
                            "description": "The last name of the author"
                          },
                          {
                            "name": "biography",
                            "type": "String",
                            "description": "AI generated biography for the author",
                            "arguments": [
                              {
                                "name": "ai_model",
                                "argumentType": "String!",
                                "description": "The AI model to use for generating the biography"
                              }
                            ]
                          }
                        ],
                        "description": "An author of a book",
                        "globalIdFields": ["author_id"],
                        "graphql": {
                          "typeName": "Author"
                        },
                        "dataConnectorTypeMapping": [
                          {
                            "dataConnectorName": "my_db",
                            "dataConnectorObjectType": "author",
                            "fieldMapping": {
                              "author_id": {
                                "column": {
                                  "name": "id"
                                }
                              }
                            }
                          },
                          {
                            "dataConnectorName": "my_vector_db",
                            "dataConnectorObjectType": "author",
                            "fieldMapping": {
                              "biography": {
                                "column": {
                                  "name": "biography",
                                  "argumentMapping": {
                                    "ai_model": "model"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["ObjectType"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/ObjectTypeV1",
                          "title": "ObjectTypeV1",
                          "description": "Definition of a user-defined Open DD object type.",
                          "type": "object",
                          "required": ["fields", "name"],
                          "properties": {
                            "name": {
                              "description": "The name to give this object type, used to refer to it elsewhere in the metadata. Must be unique across all types defined in this subgraph.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/CustomTypeName",
                                  "title": "CustomTypeName",
                                  "description": "The name of a user-defined type.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "fields": {
                              "description": "The list of fields defined for this object type.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/FieldDefinition",
                                "title": "ObjectFieldDefinition",
                                "description": "The definition of a field in a user-defined object type.",
                                "type": "object",
                                "required": ["name", "type"],
                                "properties": {
                                  "name": {
                                    "description": "The name of the field. This name is used both when referring to the field elsewhere in the metadata and when creating the corresponding GraphQl type.",
                                    "allOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                      }
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of this field. This uses the GraphQL syntax to represent field types and must refer to one of the inbuilt OpenDd types or another user-defined type.",
                                    "allOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/outputType/allOf/0"
                                      }
                                    ]
                                  },
                                  "description": {
                                    "description": "The description of this field. Gets added to the description of the field's definition in the graphql schema.",
                                    "type": ["string", "null"]
                                  },
                                  "deprecated": {
                                    "description": "Whether this field is deprecated. If set, the deprecation status is added to the field's graphql schema.",
                                    "anyOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "arguments": {
                                    "description": "The arguments for the field",
                                    "default": [],
                                    "type": "array",
                                    "items": {
                                      "$id": "https://hasura.io/jsonschemas/metadata/FieldArgumentDefinition",
                                      "title": "FieldArgumentDefinition",
                                      "description": "The definition of an argument for a field in a user-defined object type.",
                                      "type": "object",
                                      "required": ["argumentType", "name"],
                                      "properties": {
                                        "name": {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/arguments/items/properties/name"
                                        },
                                        "argumentType": {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/outputType/allOf/0"
                                        },
                                        "description": {
                                          "type": ["string", "null"]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "globalIdFields": {
                              "description": "The subset of fields that uniquely identify this object in the domain. Setting this property will automatically implement the GraphQL Relay Node interface for this object type and add an `id` global ID field. If setting this property, there must not be a field named `id` already present.",
                              "type": ["array", "null"],
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/FieldName",
                                "title": "FieldName",
                                "description": "The name of a field in a user-defined object type.",
                                "type": "string",
                                "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                              }
                            },
                            "graphql": {
                              "description": "Configuration for how this object type should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ObjectTypeGraphQLConfiguration",
                                  "title": "ObjectTypeGraphQLConfiguration",
                                  "description": "GraphQL configuration of an Open DD object type.",
                                  "type": "object",
                                  "properties": {
                                    "typeName": {
                                      "description": "The name to use for the GraphQL type representation of this object type when used in an output context.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "inputTypeName": {
                                      "description": "The name to use for the GraphQL type representation of this object type when used in an input context.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "apolloFederation": {
                                      "description": "Configuration for exposing apollo federation related types and directives.",
                                      "anyOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ObjectApolloFederationConfig",
                                          "title": "ObjectApolloFederationConfig",
                                          "description": "Configuration for apollo federation related types and directives.",
                                          "type": "object",
                                          "required": ["keys"],
                                          "properties": {
                                            "keys": {
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/ApolloFederationObjectKey",
                                                "title": "ApolloFederationObjectKey",
                                                "description": "The definition of a key for an apollo federation object.",
                                                "type": "object",
                                                "required": ["fields"],
                                                "properties": {
                                                  "fields": {
                                                    "type": "array",
                                                    "items": {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "description": {
                              "description": "The description of the object. Gets added to the description of the object's definition in the graphql schema.",
                              "type": ["string", "null"]
                            },
                            "dataConnectorTypeMapping": {
                              "description": "Mapping of this object type to corresponding object types in various data connectors.",
                              "default": [],
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorTypeMapping",
                                "title": "DataConnectorTypeMapping",
                                "description": "This defines the mapping of the fields of an object type to the corresponding columns of an object type in a data connector.",
                                "type": "object",
                                "required": ["dataConnectorName", "dataConnectorObjectType"],
                                "properties": {
                                  "dataConnectorName": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                  },
                                  "dataConnectorObjectType": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/4/oneOf/0/properties/definition/properties/dataConnectorObjectType/allOf/0"
                                  },
                                  "fieldMapping": {
                                    "default": {},
                                    "allOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/FieldMappings",
                                        "title": "FieldMappings",
                                        "description": "Mapping of object fields to their source columns in the data connector.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/FieldMapping",
                                          "title": "FieldMapping",
                                          "oneOf": [
                                            {
                                              "description": "Source field directly maps to some column in the data connector.",
                                              "type": "object",
                                              "required": ["column"],
                                              "properties": {
                                                "column": {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/ColumnFieldMapping",
                                                  "title": "ColumnFieldMapping",
                                                  "description": "The target column in a data connector object that a source field maps to.",
                                                  "type": "object",
                                                  "required": ["name"],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The name of the target column",
                                                      "allOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/responseHeaders/anyOf/0/properties/resultField/allOf/0"
                                                        }
                                                      ]
                                                    },
                                                    "argumentMapping": {
                                                      "description": "Arguments to the column field",
                                                      "anyOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/source/anyOf/0/properties/argumentMapping/allOf/0"
                                                        },
                                                        {
                                                          "type": "null"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/ScalarType",
                  "title": "ScalarType",
                  "description": "Definition of a user-defined scalar type that that has opaque semantics.",
                  "examples": [
                    {
                      "kind": "ScalarType",
                      "version": "v1",
                      "name": "CustomString",
                      "graphql": {
                        "typeName": "CustomString"
                      },
                      "description": "A custom string type"
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["ScalarType"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/ScalarTypeV1",
                          "title": "ScalarTypeV1",
                          "description": "Definition of a user-defined scalar type that that has opaque semantics.",
                          "type": "object",
                          "required": ["name"],
                          "properties": {
                            "name": {
                              "description": "The name to give this scalar type, used to refer to it elsewhere in the metadata. Must be unique across all types defined in this subgraph.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this scalar type should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ScalarTypeGraphQLConfiguration",
                                  "title": "ScalarTypeGraphQLConfiguration",
                                  "description": "GraphQL configuration of an Open DD scalar type",
                                  "type": "object",
                                  "required": ["typeName"],
                                  "properties": {
                                    "typeName": {
                                      "description": "The name of the GraphQl type to use for this scalar.",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "description": {
                              "description": "The description of this scalar. Gets added to the description of the scalar's definition in the graphql schema.",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/ObjectBooleanExpressionType",
                  "title": "ObjectBooleanExpressionType",
                  "description": "Definition of a type representing a boolean expression on an Open DD object type.",
                  "examples": [
                    {
                      "kind": "ObjectBooleanExpressionType",
                      "version": "v1",
                      "definition": {
                        "name": "AuthorBoolExp",
                        "objectType": "Author",
                        "dataConnectorName": "my_db",
                        "dataConnectorObjectType": "author",
                        "comparableFields": [
                          {
                            "fieldName": "article_id",
                            "operators": {
                              "enableAll": true
                            }
                          },
                          {
                            "fieldName": "title",
                            "operators": {
                              "enableAll": true
                            }
                          },
                          {
                            "fieldName": "author_id",
                            "operators": {
                              "enableAll": true
                            }
                          }
                        ],
                        "graphql": {
                          "typeName": "Author_bool_exp"
                        }
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["ObjectBooleanExpressionType"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/ObjectBooleanExpressionTypeV1",
                          "title": "ObjectBooleanExpressionTypeV1",
                          "description": "Definition of a type representing a boolean expression on an Open DD object type. Deprecated in favour of `BooleanExpressionType`.",
                          "type": "object",
                          "required": [
                            "comparableFields",
                            "dataConnectorName",
                            "dataConnectorObjectType",
                            "name",
                            "objectType"
                          ],
                          "properties": {
                            "name": {
                              "description": "The name to give this object boolean expression type, used to refer to it elsewhere in the metadata. Must be unique across all types defined in this subgraph.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "objectType": {
                              "description": "The name of the object type that this boolean expression applies to.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "dataConnectorName": {
                              "description": "The data connector this boolean expression type is based on.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "dataConnectorObjectType": {
                              "description": "The object type in the data connector's schema this boolean expression type is based on.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorObjectType",
                                  "title": "DataConnectorObjectType",
                                  "description": "The name of an object type in a data connector.",
                                  "type": "string"
                                }
                              ]
                            },
                            "comparableFields": {
                              "description": "The list of fields of the object type that can be used for comparison when evaluating this boolean expression.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/ComparableField",
                                "title": "ComparableField",
                                "description": "A field of an object type that can be used for comparison when evaluating a boolean expression.",
                                "type": "object",
                                "required": ["fieldName", "operators"],
                                "properties": {
                                  "fieldName": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                  },
                                  "operators": {
                                    "$id": "https://hasura.io/jsonschemas/metadata/EnableAllOrSpecific_for_OperatorName",
                                    "title": "EnableAllOrSpecific",
                                    "description": "Enable all or specific values.",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": ["enableAll"],
                                        "properties": {
                                          "enableAll": {
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "required": ["enableSpecific"],
                                        "properties": {
                                          "enableSpecific": {
                                            "type": "array",
                                            "items": {
                                              "$id": "https://hasura.io/jsonschemas/metadata/OperatorName",
                                              "title": "OperatorName",
                                              "description": "The name of an operator",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "graphql": {
                              "description": "Configuration for how this object type should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ObjectBooleanExpressionTypeGraphQlConfiguration",
                                  "title": "ObjectBooleanExpressionTypeGraphQlConfiguration",
                                  "description": "GraphQL configuration of an Open DD boolean expression type.",
                                  "type": "object",
                                  "required": ["typeName"],
                                  "properties": {
                                    "typeName": {
                                      "description": "The name to use for the GraphQL type representation of this boolean expression type.",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionType",
                  "title": "BooleanExpressionType",
                  "description": "Definition of a type representing a boolean expression on an OpenDD type.",
                  "examples": [
                    {
                      "kind": "BooleanExpressionType",
                      "version": "v1",
                      "definition": {
                        "name": "Album_bool_exp",
                        "operand": {
                          "object": {
                            "type": "Album",
                            "comparableFields": [
                              {
                                "fieldName": "AlbumId",
                                "booleanExpressionType": "pg_Int_Comparison_exp"
                              },
                              {
                                "fieldName": "ArtistId",
                                "booleanExpressionType": "pg_Int_Comparison_exp_with_is_null"
                              },
                              {
                                "fieldName": "Address",
                                "booleanExpressionType": "Address_bool_exp"
                              }
                            ],
                            "comparableRelationships": [
                              {
                                "relationshipName": "artist",
                                "booleanExpressionType": "Artist_bool_exp"
                              }
                            ]
                          }
                        },
                        "logicalOperators": {
                          "enable": true
                        },
                        "isNull": {
                          "enable": true
                        },
                        "graphql": {
                          "typeName": "App_Album_bool_exp"
                        }
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["BooleanExpressionType"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionTypeV1",
                          "title": "BooleanExpressionTypeV1",
                          "description": "Definition of a type representing a boolean expression on an OpenDD object type.",
                          "type": "object",
                          "required": ["isNull", "logicalOperators", "name", "operand"],
                          "properties": {
                            "name": {
                              "description": "The name to give this boolean expression type, used to refer to it elsewhere in the metadata. Must be unique across all types defined in this subgraph.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "operand": {
                              "description": "The type that this boolean expression applies to.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionOperand",
                                  "title": "BooleanExpressionOperand",
                                  "description": "Configuration for object or scalar boolean expression",
                                  "oneOf": [
                                    {
                                      "title": "Object",
                                      "description": "Definition of a boolean expression on an OpenDD object type",
                                      "type": "object",
                                      "required": ["object"],
                                      "properties": {
                                        "object": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionObjectOperand",
                                          "title": "BooleanExpressionObjectOperand",
                                          "description": "Definition of an object type representing a boolean expression on an OpenDD object type.",
                                          "type": "object",
                                          "required": ["comparableFields", "comparableRelationships", "type"],
                                          "properties": {
                                            "type": {
                                              "description": "The name of the object type that this boolean expression applies to.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                                }
                                              ]
                                            },
                                            "comparableFields": {
                                              "description": "The list of fields of the object type that can be used for comparison when evaluating this boolean expression.",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionComparableField",
                                                "title": "BooleanExpressionComparableField",
                                                "description": "Comparison configuration definition for a field that can be used for a comparison",
                                                "type": "object",
                                                "required": ["booleanExpressionType", "fieldName"],
                                                "properties": {
                                                  "fieldName": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                  },
                                                  "booleanExpressionType": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "comparableRelationships": {
                                              "description": "The list of relationships of the object type that can be used for comparison when evaluating this boolean expression.",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionComparableRelationship",
                                                "title": "BooleanExpressionComparableRelationship",
                                                "description": "Definition of a relationship that can be used for a comparison",
                                                "type": "object",
                                                "required": ["relationshipName"],
                                                "properties": {
                                                  "relationshipName": {
                                                    "description": "The name of the relationship to use for comparison",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/name/allOf/0"
                                                      }
                                                    ]
                                                  },
                                                  "booleanExpressionType": {
                                                    "description": "The boolean expression type to use for comparison. This is optional for relationships to models, and defaults to the filterExpressionType of the model",
                                                    "anyOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "title": "Scalar",
                                      "description": "Definition of a boolean expression on a scalar tyoe",
                                      "type": "object",
                                      "required": ["scalar"],
                                      "properties": {
                                        "scalar": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionScalarOperand",
                                          "title": "BooleanExpressionScalarOperand",
                                          "description": "Definition of a scalar type representing a boolean expression on an OpenDD scalar type.",
                                          "type": "object",
                                          "required": ["comparisonOperators", "dataConnectorOperatorMapping", "type"],
                                          "properties": {
                                            "type": {
                                              "description": "The OpenDD type name of the scalar type that this boolean expression applies to.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/6/oneOf/0/properties/definition/properties/representation/allOf/0"
                                                }
                                              ]
                                            },
                                            "comparisonOperators": {
                                              "description": "The list of comparison operators that can used on this scalar type",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/ComparisonOperator",
                                                "title": "ComparisonOperator",
                                                "description": "Definition of a comparison operator for a scalar type",
                                                "type": "object",
                                                "required": ["argumentType", "name"],
                                                "properties": {
                                                  "name": {
                                                    "description": "Name you want to give the operator in OpenDD / GraphQL",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/4/oneOf/0/properties/definition/properties/comparableFields/items/properties/operators/oneOf/1/properties/enableSpecific/items"
                                                      }
                                                    ]
                                                  },
                                                  "argumentType": {
                                                    "description": "An OpenDD type",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/outputType/allOf/0"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "dataConnectorOperatorMapping": {
                                              "description": "The list of mappings between OpenDD operator names and the names used in the data connector schema",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorOperatorMapping",
                                                "title": "DataConnectorOperatorMapping",
                                                "description": "Mapping between OpenDD operator names and the names used in the data connector schema",
                                                "type": "object",
                                                "required": [
                                                  "dataConnectorName",
                                                  "dataConnectorScalarType",
                                                  "operatorMapping"
                                                ],
                                                "properties": {
                                                  "dataConnectorName": {
                                                    "description": "Name of the data connector this mapping applies to",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                                      }
                                                    ]
                                                  },
                                                  "dataConnectorScalarType": {
                                                    "description": "Name of the scalar type according to the data connector's schema",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/6/oneOf/0/properties/definition/properties/dataConnectorScalarType/allOf/0"
                                                      }
                                                    ]
                                                  },
                                                  "operatorMapping": {
                                                    "title": "operator_mapping",
                                                    "description": "Mapping between OpenDD operator names and the data connector's operator names Defaults to the same operator name (e.g. \"_eq: _eq\") if no explicit mapping is present.",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorOperatorName",
                                                      "title": "DataConnectorOperatorName",
                                                      "description": "The name of an operator in a data connector.",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "logicalOperators": {
                              "description": "Whether to enable _and / _or / _not",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionLogicalOperators",
                                  "title": "BooleanExpressionLogicalOperators",
                                  "description": "Configuration for logical operators in boolean expressions",
                                  "type": "object",
                                  "required": ["enable"],
                                  "properties": {
                                    "enable": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "isNull": {
                              "description": "Whether to enable _is_null",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionIsNull",
                                  "title": "BooleanExpressionIsNull",
                                  "description": "Configuration for is_null in boolean expressions",
                                  "type": "object",
                                  "required": ["enable"],
                                  "properties": {
                                    "enable": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this object type should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/BooleanExpressionTypeGraphQlConfiguration",
                                  "title": "BooleanExpressionTypeGraphQlConfiguration",
                                  "description": "GraphQL configuration of an OpenDD boolean expression type.",
                                  "type": "object",
                                  "required": ["typeName"],
                                  "properties": {
                                    "typeName": {
                                      "description": "The name to use for the GraphQL type representation of this boolean expression type.",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorScalarRepresentation",
                  "title": "DataConnectorScalarRepresentation",
                  "description": "The representation of a data connector scalar in terms of Open DD types",
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["DataConnectorScalarRepresentation"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorScalarRepresentationV1",
                          "title": "DataConnectorScalarRepresentationV1",
                          "description": "The representation of a data connector scalar in terms of Open DD types. Deprecated in favour of `BooleanExpressionType`.",
                          "examples": [
                            {
                              "dataConnectorName": "data_connector",
                              "dataConnectorScalarType": "varchar",
                              "representation": "String",
                              "graphql": {
                                "comparisonExpressionTypeName": "String_Comparison_Exp"
                              }
                            }
                          ],
                          "type": "object",
                          "required": ["dataConnectorName", "dataConnectorScalarType", "representation"],
                          "properties": {
                            "dataConnectorName": {
                              "description": "The name of the data connector that this scalar type comes from.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "dataConnectorScalarType": {
                              "description": "The name of the scalar type coming from the data connector.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorScalarType",
                                  "title": "DataConnectorScalarType",
                                  "description": "The name of a scalar type in a data connector.",
                                  "type": "string"
                                }
                              ]
                            },
                            "representation": {
                              "description": "The name of the Open DD type that this data connector scalar type should be represented as.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/TypeName",
                                  "title": "TypeName",
                                  "anyOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/InbuiltType",
                                      "title": "InbuiltType",
                                      "description": "An inbuilt primitive OpenDD type.",
                                      "type": "string",
                                      "enum": ["ID", "Int", "Float", "Boolean", "String"]
                                    },
                                    {
                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this scalar's operators should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorScalarGraphQLConfiguration",
                                  "title": "DataConnectorScalarGraphQLConfiguration",
                                  "description": "GraphQL configuration of a data connector scalar",
                                  "type": "object",
                                  "properties": {
                                    "comparisonExpressionTypeName": {
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/AggregateExpression",
                  "title": "AggregateExpression",
                  "description": "Definition of an aggregate expression on an OpenDD type.",
                  "examples": [
                    {
                      "kind": "AggregateExpression",
                      "version": "v1",
                      "definition": {
                        "name": "Invoice_aggregate_exp",
                        "operand": {
                          "object": {
                            "aggregatedType": "Invoice",
                            "aggregatableFields": [
                              {
                                "fieldName": "Total",
                                "aggregateExpression": "Float_aggregate_exp"
                              }
                            ]
                          }
                        },
                        "graphql": {
                          "selectTypeName": "Invoice_aggregate_fields"
                        },
                        "description": "Aggregate over Invoices"
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["AggregateExpression"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/AggregateExpressionV1",
                          "title": "AggregateExpressionV1",
                          "description": "Definition of how to aggregate over a particular operand type",
                          "type": "object",
                          "required": ["name", "operand"],
                          "properties": {
                            "name": {
                              "description": "The name of the aggregate expression.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/AggregateExpressionName",
                                  "title": "AggregateExpressionName",
                                  "description": "The name of an aggregate expression.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "operand": {
                              "description": "The type this aggregation expression aggregates over, and its associated configuration",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/AggregateOperand",
                                  "title": "AggregateOperand",
                                  "description": "Definition of an aggregate expression's operand",
                                  "oneOf": [
                                    {
                                      "title": "Object",
                                      "description": "If the operand is an object type",
                                      "type": "object",
                                      "required": ["object"],
                                      "properties": {
                                        "object": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ObjectAggregateOperand",
                                          "title": "ObjectAggregateOperand",
                                          "description": "Definition of an aggregate over an object-typed operand",
                                          "type": "object",
                                          "required": ["aggregatableFields", "aggregatedType"],
                                          "properties": {
                                            "aggregatedType": {
                                              "description": "The name of the object type the aggregate expression is aggregating",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                                }
                                              ]
                                            },
                                            "aggregatableFields": {
                                              "description": "The fields on the object that are aggregatable",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/AggregatableFieldDefinition",
                                                "title": "AggregatableFieldDefinition",
                                                "description": "Definition of an aggregatable field on an object type",
                                                "type": "object",
                                                "required": ["aggregateExpression", "fieldName"],
                                                "properties": {
                                                  "fieldName": {
                                                    "description": "The name of the field on the operand aggregated type that is aggregatable",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                      }
                                                    ]
                                                  },
                                                  "description": {
                                                    "description": "A description of the aggregatable field. Gets added to the description of the field in the GraphQL schema.",
                                                    "type": ["string", "null"]
                                                  },
                                                  "aggregateExpression": {
                                                    "description": "The aggregate expression used to aggregate the type of the field",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/7/oneOf/0/properties/definition/properties/name/allOf/0"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "title": "Scalar",
                                      "description": "If the operand is a scalar type",
                                      "type": "object",
                                      "required": ["scalar"],
                                      "properties": {
                                        "scalar": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ScalarAggregateOperand",
                                          "title": "ScalarAggregateOperand",
                                          "description": "Definition of an aggregate over a scalar-typed operand",
                                          "type": "object",
                                          "required": [
                                            "aggregatedType",
                                            "aggregationFunctions",
                                            "dataConnectorAggregationFunctionMapping"
                                          ],
                                          "properties": {
                                            "aggregatedType": {
                                              "description": "The name of the scalar type the aggregate expression is aggregating",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/6/oneOf/0/properties/definition/properties/representation/allOf/0"
                                                }
                                              ]
                                            },
                                            "aggregationFunctions": {
                                              "description": "The aggregation functions that operate over the scalar type",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/AggregationFunctionDefinition",
                                                "title": "AggregationFunctionDefinition",
                                                "description": "Definition of an aggregation function",
                                                "type": "object",
                                                "required": ["name", "returnType"],
                                                "properties": {
                                                  "name": {
                                                    "description": "The name of the aggregation function",
                                                    "allOf": [
                                                      {
                                                        "$id": "https://hasura.io/jsonschemas/metadata/AggregationFunctionName",
                                                        "title": "AggregationFunctionName",
                                                        "description": "The name of an aggregation function.",
                                                        "type": "string",
                                                        "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                                      }
                                                    ]
                                                  },
                                                  "description": {
                                                    "description": "A description of the aggregation function. Gets added to the description of the field in the GraphQL schema.",
                                                    "type": ["string", "null"]
                                                  },
                                                  "returnType": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/outputType/allOf/0"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "dataConnectorAggregationFunctionMapping": {
                                              "description": "Mapping of aggregation functions to corresponding aggregation functions in various data connectors",
                                              "type": "array",
                                              "items": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorAggregationFunctionMapping",
                                                "title": "DataConnectorAggregationFunctionMapping",
                                                "description": "Definition of how to map an aggregate expression's aggregation functions to data connector aggregation functions.",
                                                "type": "object",
                                                "required": [
                                                  "dataConnectorName",
                                                  "dataConnectorScalarType",
                                                  "functionMapping"
                                                ],
                                                "properties": {
                                                  "dataConnectorName": {
                                                    "description": "The data connector being mapped to",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                                      }
                                                    ]
                                                  },
                                                  "dataConnectorScalarType": {
                                                    "description": "The matching scalar type in the data connector for the operand scalar type",
                                                    "allOf": [
                                                      {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/6/oneOf/0/properties/definition/properties/dataConnectorScalarType/allOf/0"
                                                      }
                                                    ]
                                                  },
                                                  "functionMapping": {
                                                    "description": "Mapping from Open DD aggregation function to data connector aggregation function",
                                                    "allOf": [
                                                      {
                                                        "$id": "https://hasura.io/jsonschemas/metadata/AggregationFunctionMappings",
                                                        "title": "AggregationFunctionMappings",
                                                        "description": "Mapping of aggregation functions to their matching aggregation functions in the data connector.",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "$id": "https://hasura.io/jsonschemas/metadata/AggregateFunctionMapping",
                                                          "title": "AggregateFunctionMapping",
                                                          "description": "Definition of how to map the aggregation function to a function in the data connector",
                                                          "type": "object",
                                                          "required": ["name"],
                                                          "properties": {
                                                            "name": {
                                                              "description": "The name of the aggregation function in the data connector",
                                                              "allOf": [
                                                                {
                                                                  "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorAggregationFunctionName",
                                                                  "title": "DataConnectorAggregationFunctionName",
                                                                  "description": "The name of an aggregation function in a data connector",
                                                                  "type": "string"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "count": {
                              "description": "Configuration for the count aggregate function used over the operand",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/AggregateCountDefinition",
                                  "title": "AggregateCountDefinition",
                                  "description": "Definition of a count aggregation function",
                                  "type": "object",
                                  "required": ["enable"],
                                  "properties": {
                                    "enable": {
                                      "description": "Whether or not the aggregate function is available for use or not",
                                      "type": "boolean"
                                    },
                                    "description": {
                                      "description": "A description of the aggregation function. Gets added to the description of the field in the GraphQL schema.",
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "countDistinct": {
                              "description": "Configuration for the count distinct aggregate function used over the operand",
                              "anyOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/7/oneOf/0/properties/definition/properties/count/anyOf/0"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this command should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/AggregateExpressionGraphQlDefinition",
                                  "title": "AggregateExpressionGraphQlDefinition",
                                  "description": "The definition of how an aggregate expression should appear in the GraphQL API.",
                                  "examples": [
                                    {
                                      "selectTypeName": "Invoice_aggregate_fields"
                                    }
                                  ],
                                  "type": "object",
                                  "required": ["selectTypeName"],
                                  "properties": {
                                    "selectTypeName": {
                                      "description": "The type name to use for the aggregate selection type",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        }
                                      ]
                                    },
                                    "deprecated": {
                                      "description": "Whether this command root field is deprecated. If set, this will be added to the graphql schema as a deprecated field.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "description": {
                              "description": "The description of the aggregate expression. Gets added to the description of the command's root field in the GraphQL schema.",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/Model",
                  "title": "Model",
                  "description": "The definition of a data model. A data model is a collection of objects of a particular type. Models can support one or more CRUD operations.",
                  "examples": [
                    {
                      "kind": "Model",
                      "version": "v1",
                      "definition": {
                        "name": "Articles",
                        "objectType": "article",
                        "globalIdSource": true,
                        "arguments": [],
                        "source": {
                          "dataConnectorName": "data_connector",
                          "collection": "articles",
                          "argumentMapping": {}
                        },
                        "filterExpressionType": "Article_bool_exp",
                        "orderableFields": [
                          {
                            "fieldName": "article_id",
                            "orderByDirections": {
                              "enableAll": true
                            }
                          },
                          {
                            "fieldName": "title",
                            "orderByDirections": {
                              "enableAll": true
                            }
                          },
                          {
                            "fieldName": "author_id",
                            "orderByDirections": {
                              "enableAll": true
                            }
                          }
                        ],
                        "graphql": {
                          "selectUniques": [
                            {
                              "queryRootField": "ArticleByID",
                              "uniqueIdentifier": ["article_id"],
                              "description": "Description for the select unique ArticleByID"
                            }
                          ],
                          "selectMany": {
                            "queryRootField": "ArticleMany",
                            "description": "Description for the select many ArticleMany"
                          },
                          "orderByExpressionType": "Article_Order_By",
                          "apolloFederation": {
                            "entitySource": true
                          }
                        },
                        "description": "Description for the model Articles"
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["Model"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/ModelV1",
                          "title": "ModelV1",
                          "description": "The definition of a data model. A data model is a collection of objects of a particular type. Models can support one or more CRUD operations.",
                          "type": "object",
                          "required": ["name", "objectType", "orderableFields"],
                          "properties": {
                            "name": {
                              "$id": "https://hasura.io/jsonschemas/metadata/ModelName",
                              "title": "ModelName",
                              "description": "The name of the data model.",
                              "type": "string",
                              "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                            },
                            "objectType": {
                              "description": "The type of the objects of which this model is a collection.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "globalIdSource": {
                              "description": "Whether this model should be used as the global ID source for all objects of its type.",
                              "default": false,
                              "type": "boolean"
                            },
                            "arguments": {
                              "description": "A list of arguments accepted by this model. Defaults to no arguments.",
                              "default": [],
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/ArgumentDefinition",
                                "title": "ArgumentDefinition",
                                "description": "The definition of an argument for a field, command, or model.",
                                "type": "object",
                                "required": ["name", "type"],
                                "properties": {
                                  "name": {
                                    "$id": "https://hasura.io/jsonschemas/metadata/ArgumentName",
                                    "title": "ArgumentName",
                                    "description": "The name of an argument.",
                                    "type": "string",
                                    "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                  },
                                  "type": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/outputType/allOf/0"
                                  },
                                  "description": {
                                    "type": ["string", "null"]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "source": {
                              "description": "The source configuration for this model.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ModelSource",
                                  "title": "ModelSource",
                                  "description": "Description of how a model maps to a particular data connector",
                                  "examples": [
                                    {
                                      "dataConnectorName": "data_connector",
                                      "collection": "articles"
                                    }
                                  ],
                                  "type": "object",
                                  "required": ["collection", "dataConnectorName"],
                                  "properties": {
                                    "dataConnectorName": {
                                      "description": "The name of the data connector backing this model.",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                        }
                                      ]
                                    },
                                    "collection": {
                                      "description": "The collection in the data connector that backs this model.",
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/CollectionName",
                                          "title": "CollectionName",
                                          "description": "The name of a collection in a data connector.",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "argumentMapping": {
                                      "description": "Mapping from model argument names to data connector collection argument names.",
                                      "default": {},
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ArgumentMapping",
                                          "title": "ArgumentMapping",
                                          "description": "Mapping of a comand or model argument name to the corresponding argument name used in the data connector. The key of this object is the argument name used in the command or model and the value is the argument name used in the data connector.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/argumentPresets/items/properties/argument"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "filterExpressionType": {
                              "description": "The boolean expression type that should be used to perform filtering on this model.",
                              "anyOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "orderableFields": {
                              "description": "A list of fields that can be used to order the objects in this model.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/OrderableField",
                                "title": "OrderableField",
                                "description": "A field that can be used to order the objects in a model.",
                                "type": "object",
                                "required": ["fieldName", "orderByDirections"],
                                "properties": {
                                  "fieldName": {
                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                  },
                                  "orderByDirections": {
                                    "$id": "https://hasura.io/jsonschemas/metadata/EnableAllOrSpecific_for_OrderByDirection",
                                    "title": "EnableAllOrSpecific",
                                    "description": "Enable all or specific values.",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": ["enableAll"],
                                        "properties": {
                                          "enableAll": {
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "required": ["enableSpecific"],
                                        "properties": {
                                          "enableSpecific": {
                                            "type": "array",
                                            "items": {
                                              "$id": "https://hasura.io/jsonschemas/metadata/OrderByDirection2",
                                              "title": "OrderByDirection",
                                              "type": "string",
                                              "enum": ["Asc", "Desc"]
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "aggregateExpression": {
                              "description": "The name of the AggregateExpression that defines how to aggregate over this model",
                              "anyOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/7/oneOf/0/properties/definition/properties/name/allOf/0"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this model should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ModelGraphQlDefinition",
                                  "title": "ModelGraphQlDefinition",
                                  "description": "The definition of how a model appears in the GraphQL API.",
                                  "examples": [
                                    {
                                      "selectUniques": [
                                        {
                                          "queryRootField": "ArticleByID",
                                          "uniqueIdentifier": ["article_id"],
                                          "description": "Description for the select unique ArticleByID"
                                        }
                                      ],
                                      "selectMany": {
                                        "queryRootField": "ArticleMany",
                                        "description": "Description for the select many ArticleMany"
                                      },
                                      "orderByExpressionType": "Article_Order_By",
                                      "aggregate": {
                                        "queryRootField": "ArticleAggregate",
                                        "description": "Aggregate over Articles"
                                      }
                                    }
                                  ],
                                  "type": "object",
                                  "required": ["selectUniques"],
                                  "properties": {
                                    "selectUniques": {
                                      "description": "For each select unique defined here, a query root field is added to the GraphQL API that can be used to select a unique object from the model.",
                                      "type": "array",
                                      "items": {
                                        "$id": "https://hasura.io/jsonschemas/metadata/SelectUniqueGraphQlDefinition",
                                        "title": "SelectUniqueGraphQlDefinition",
                                        "description": "The definition of the GraphQL API for selecting a unique row/object from a model.",
                                        "type": "object",
                                        "required": ["queryRootField", "uniqueIdentifier"],
                                        "properties": {
                                          "queryRootField": {
                                            "description": "The name of the query root field for this API.",
                                            "allOf": [
                                              {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                              }
                                            ]
                                          },
                                          "uniqueIdentifier": {
                                            "description": "A set of fields which can uniquely identify a row/object in the model.",
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                            }
                                          },
                                          "description": {
                                            "description": "The description of the select unique graphql definition of the model. Gets added to the description of the select unique root field of the model in the graphql schema.",
                                            "type": ["string", "null"]
                                          },
                                          "deprecated": {
                                            "description": "Whether this select unique query field is deprecated. If set, the deprecation status is added to the select unique root field's graphql schema.",
                                            "anyOf": [
                                              {
                                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                              },
                                              {
                                                "type": "null"
                                              }
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "selectMany": {
                                      "description": "Select many configuration for a model adds a query root field to the GraphQl API that can be used to retrieve multiple objects from the model.",
                                      "anyOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/SelectManyGraphQlDefinition",
                                          "title": "SelectManyGraphQlDefinition",
                                          "description": "The definition of the GraphQL API for selecting rows from a model.",
                                          "type": "object",
                                          "required": ["queryRootField"],
                                          "properties": {
                                            "queryRootField": {
                                              "description": "The name of the query root field for this API.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                }
                                              ]
                                            },
                                            "description": {
                                              "description": "The description of the select many graphql definition of the model. Gets added to the description of the select many root field of the model in the graphql schema.",
                                              "type": ["string", "null"]
                                            },
                                            "deprecated": {
                                              "description": "Whether this select many query field is deprecated. If set, the deprecation status is added to the select many root field's graphql schema.",
                                              "anyOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                                },
                                                {
                                                  "type": "null"
                                                }
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "argumentsInputType": {
                                      "description": "The type name of the input type used to hold the arguments of the model.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "orderByExpressionType": {
                                      "description": "The type name of the order by expression input type.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "apolloFederation": {
                                      "description": "Apollo Federation configuration",
                                      "anyOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ModelApolloFederationConfiguration",
                                          "title": "ModelApolloFederationConfiguration",
                                          "description": "Apollo Federation configuration for a model.",
                                          "type": "object",
                                          "required": ["entitySource"],
                                          "properties": {
                                            "entitySource": {
                                              "description": "Whether this model should be used as the source for fetching _entity for object of its type.",
                                              "type": "boolean"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "filterInputTypeName": {
                                      "description": "The type name of the input type used to hold the filtering settings used by aggregates (etc) to filter their input before processing",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/1/oneOf/0/properties/definition/properties/query/properties/rootOperationTypeName/allOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "aggregate": {
                                      "description": "Configures the query root field added to the GraphQL API that can be used to aggregate over the model",
                                      "anyOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ModelAggregateGraphQlDefinition",
                                          "title": "ModelAggregateGraphQlDefinition",
                                          "description": "The definition of the GraphQL API for aggregating over a model.",
                                          "type": "object",
                                          "required": ["queryRootField"],
                                          "properties": {
                                            "queryRootField": {
                                              "description": "The name of the query root field for this API.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/graphql/anyOf/0/properties/rootFieldName/allOf/0"
                                                }
                                              ]
                                            },
                                            "description": {
                                              "description": "The description of the aggregate graphql definition of the model. Gets added to the description of the aggregate root field of the model in the graphql schema.",
                                              "type": ["string", "null"]
                                            },
                                            "deprecated": {
                                              "description": "Whether this aggregate query field is deprecated. If set, the deprecation status is added to the aggregate root field's graphql schema.",
                                              "anyOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                                },
                                                {
                                                  "type": "null"
                                                }
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "description": {
                              "description": "The description of the model. Gets added to the description of the model in the graphql schema.",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/Command",
                  "title": "Command",
                  "description": "The definition of a command. A command is a user-defined operation which can take arguments and returns an output. The semantics of a command are opaque to the Open DD specification.",
                  "examples": [
                    {
                      "kind": "Command",
                      "version": "v1",
                      "definition": {
                        "name": "get_latest_article",
                        "outputType": "commandArticle",
                        "arguments": [],
                        "source": {
                          "dataConnectorName": "data_connector",
                          "dataConnectorCommand": {
                            "function": "latest_article"
                          },
                          "argumentMapping": {}
                        },
                        "graphql": {
                          "rootFieldName": "getLatestArticle",
                          "rootFieldKind": "Query"
                        },
                        "description": "Get the latest article"
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["Command"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/CommandV1",
                          "title": "CommandV1",
                          "description": "Definition of an OpenDD Command, which is a custom operation that can take arguments and returns an output. The semantics of a command are opaque to OpenDD.",
                          "type": "object",
                          "required": ["name", "outputType"],
                          "properties": {
                            "name": {
                              "description": "The name of the command.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/CommandName",
                                  "title": "CommandName",
                                  "description": "The name of a command.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "outputType": {
                              "description": "The return type of the command.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/TypeReference",
                                  "title": "TypeReference",
                                  "description": "A reference to an Open DD type including nullable values and arrays.\nSuffix '!' to indicate a non-nullable reference, and wrap in '[]' to indicate an array.\nEg: '[String!]!' is a non-nullable array of non-nullable strings.",
                                  "type": "string"
                                }
                              ]
                            },
                            "arguments": {
                              "description": "The list of arguments accepted by this command. Defaults to no arguments.",
                              "default": [],
                              "type": "array",
                              "items": {
                                "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/arguments/items"
                              }
                            },
                            "source": {
                              "description": "The source configuration for this command.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/CommandSource",
                                  "title": "CommandSource",
                                  "description": "Description of how a command maps to a particular data connector",
                                  "examples": [
                                    {
                                      "dataConnectorName": "data_connector",
                                      "dataConnectorCommand": {
                                        "function": "latest_article"
                                      },
                                      "argumentMapping": {}
                                    }
                                  ],
                                  "type": "object",
                                  "required": ["dataConnectorCommand", "dataConnectorName"],
                                  "properties": {
                                    "dataConnectorName": {
                                      "description": "The name of the data connector backing this command.",
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/name/allOf/0"
                                        }
                                      ]
                                    },
                                    "dataConnectorCommand": {
                                      "description": "The function/procedure in the data connector that backs this command.",
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/DataConnectorCommand",
                                          "title": "DataConnectorCommand",
                                          "oneOf": [
                                            {
                                              "title": "Function",
                                              "description": "A function as data connector command.",
                                              "type": "object",
                                              "required": ["function"],
                                              "properties": {
                                                "function": {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/FunctionName",
                                                  "title": "FunctionName",
                                                  "description": "The name of a function backing the command.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            {
                                              "title": "Procedure",
                                              "description": "A procedure as data connector command.",
                                              "type": "object",
                                              "required": ["procedure"],
                                              "properties": {
                                                "procedure": {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/ProcedureName",
                                                  "title": "ProcedureName",
                                                  "description": "The name of a procedure backing the command.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "argumentMapping": {
                                      "description": "Mapping from command argument names to data connector function or procedure argument names.",
                                      "default": {},
                                      "allOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/source/anyOf/0/properties/argumentMapping/allOf/0"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this command should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/CommandGraphQlDefinition",
                                  "title": "CommandGraphQlDefinition",
                                  "description": "The definition of how a command should appear in the GraphQL API.",
                                  "examples": [
                                    {
                                      "rootFieldName": "getLatestArticle",
                                      "rootFieldKind": "Query"
                                    }
                                  ],
                                  "type": "object",
                                  "required": ["rootFieldKind", "rootFieldName"],
                                  "properties": {
                                    "rootFieldName": {
                                      "description": "The name of the graphql root field to use for this command.",
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/GraphQlFieldName",
                                          "title": "GraphQlFieldName",
                                          "description": "The name of a GraphQL object field.",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "rootFieldKind": {
                                      "description": "Whether to put this command in the Query or Mutation root of the GraphQL API.",
                                      "allOf": [
                                        {
                                          "$id": "https://hasura.io/jsonschemas/metadata/GraphQlRootFieldKind",
                                          "title": "GraphQlRootFieldKind",
                                          "type": "string",
                                          "enum": ["Query", "Mutation"]
                                        }
                                      ]
                                    },
                                    "deprecated": {
                                      "description": "Whether this command root field is deprecated. If set, this will be added to the graphql schema as a deprecated field.",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/deprecated/anyOf/0"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "description": {
                              "description": "The description of the command. Gets added to the description of the command's root field in the GraphQL schema.",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/Relationship",
                  "title": "Relationship",
                  "description": "Definition of a relationship on an OpenDD type which allows it to be extended with related models or commands.",
                  "examples": [
                    {
                      "kind": "Relationship",
                      "version": "v1",
                      "definition": {
                        "name": "Articles",
                        "source": "author",
                        "target": {
                          "model": {
                            "name": "Articles",
                            "subgraph": null,
                            "relationshipType": "Array"
                          }
                        },
                        "mapping": [
                          {
                            "source": {
                              "fieldPath": [
                                {
                                  "fieldName": "author_id"
                                }
                              ]
                            },
                            "target": {
                              "modelField": [
                                {
                                  "fieldName": "author_id"
                                }
                              ]
                            }
                          }
                        ],
                        "description": "Articles written by an author"
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["Relationship"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/RelationshipV1",
                          "title": "RelationshipV1",
                          "description": "Definition of a relationship on an OpenDD type which allows it to be extended with related models or commands.",
                          "type": "object",
                          "required": ["mapping", "name", "sourceType", "target"],
                          "properties": {
                            "name": {
                              "description": "The name of the relationship.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/RelationshipName",
                                  "title": "RelationshipName",
                                  "description": "The name of the GraphQL relationship field.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "sourceType": {
                              "description": "The source type of the relationship.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "target": {
                              "description": "The target of the relationship.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/RelationshipTarget",
                                  "title": "RelationshipTarget",
                                  "description": "The target for a relationship.",
                                  "examples": [
                                    {
                                      "model": {
                                        "name": "Articles",
                                        "subgraph": null,
                                        "relationshipType": "Array"
                                      }
                                    }
                                  ],
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": ["model"],
                                      "properties": {
                                        "model": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/ModelRelationshipTarget",
                                          "title": "ModelRelationshipTarget",
                                          "description": "The target model for a relationship.",
                                          "type": "object",
                                          "required": ["name", "relationshipType"],
                                          "properties": {
                                            "name": {
                                              "description": "The name of the data model.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/modelName/allOf/0"
                                                }
                                              ]
                                            },
                                            "subgraph": {
                                              "description": "The subgraph of the target model. Defaults to the current subgraph.",
                                              "type": ["string", "null"],
                                              "pattern": "^(?!__)[_a-zA-Z][_a-zA-Z0-9]*$"
                                            },
                                            "relationshipType": {
                                              "description": "Type of the relationship - object or array.",
                                              "allOf": [
                                                {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/RelationshipType",
                                                  "title": "RelationshipType",
                                                  "description": "Type of the relationship.",
                                                  "oneOf": [
                                                    {
                                                      "description": "Select one related object from the target.",
                                                      "type": "string",
                                                      "enum": ["Object"]
                                                    },
                                                    {
                                                      "description": "Select multiple related objects from the target.",
                                                      "type": "string",
                                                      "enum": ["Array"]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "aggregate": {
                                              "description": "How to aggregate over the relationship. Only valid for array relationships",
                                              "anyOf": [
                                                {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/ModelRelationshipTargetAggregate",
                                                  "title": "ModelRelationshipTargetAggregate",
                                                  "description": "Which aggregate expression to use to aggregate the array relationship.",
                                                  "type": "object",
                                                  "required": ["aggregateExpression"],
                                                  "properties": {
                                                    "aggregateExpression": {
                                                      "description": "The name of the aggregate expression that defines how to aggregate across the relationship.",
                                                      "allOf": [
                                                        {
                                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/7/oneOf/0/properties/definition/properties/name/allOf/0"
                                                        }
                                                      ]
                                                    },
                                                    "description": {
                                                      "description": "The description of the relationship aggregate. Gets added to the description of the aggregate field in the GraphQL schema",
                                                      "type": ["string", "null"]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "type": "null"
                                                }
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "required": ["command"],
                                      "properties": {
                                        "command": {
                                          "$id": "https://hasura.io/jsonschemas/metadata/CommandRelationshipTarget",
                                          "title": "CommandRelationshipTarget",
                                          "description": "The target command for a relationship.",
                                          "type": "object",
                                          "required": ["name"],
                                          "properties": {
                                            "name": {
                                              "description": "The name of the command.",
                                              "allOf": [
                                                {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/name/allOf/0"
                                                }
                                              ]
                                            },
                                            "subgraph": {
                                              "description": "The subgraph of the target command. Defaults to the current subgraph.",
                                              "type": ["string", "null"],
                                              "pattern": "^(?!__)[_a-zA-Z][_a-zA-Z0-9]*$"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "mapping": {
                              "description": "The mapping configuration of source to target for the relationship.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/RelationshipMapping",
                                "title": "RelationshipMapping",
                                "description": "Definition of a how a particular field in the source maps to a target field or argument.",
                                "examples": [
                                  {
                                    "source": {
                                      "fieldPath": [
                                        {
                                          "fieldName": "author_id"
                                        }
                                      ]
                                    },
                                    "target": {
                                      "modelField": [
                                        {
                                          "fieldName": "author_id"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "type": "object",
                                "required": ["source", "target"],
                                "properties": {
                                  "source": {
                                    "description": "The source configuration for this relationship mapping.",
                                    "allOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/RelationshipMappingSource",
                                        "title": "RelationshipMappingSource",
                                        "description": "The source configuration for a relationship mapping.",
                                        "oneOf": [
                                          {
                                            "title": "SourceValue",
                                            "type": "object",
                                            "required": ["value"],
                                            "properties": {
                                              "value": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/ValueExpression",
                                                "title": "ValueExpression",
                                                "description": "An expression which evaluates to a value that can be used in permissions and various presets.",
                                                "oneOf": [
                                                  {
                                                    "title": "Literal",
                                                    "type": "object",
                                                    "required": ["literal"],
                                                    "properties": {
                                                      "literal": true
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  {
                                                    "title": "SessionVariable",
                                                    "type": "object",
                                                    "required": ["sessionVariable"],
                                                    "properties": {
                                                      "sessionVariable": {
                                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/13/oneOf/0/properties/definition/properties/permissions/items/properties/argumentPresets/items/properties/value/allOf/0/oneOf/1/properties/sessionVariable"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          {
                                            "title": "SourceField",
                                            "type": "object",
                                            "required": ["fieldPath"],
                                            "properties": {
                                              "fieldPath": {
                                                "type": "array",
                                                "items": {
                                                  "$id": "https://hasura.io/jsonschemas/metadata/FieldAccess",
                                                  "title": "RelationshipSourceFieldAccess",
                                                  "description": "A field access in a relationship mapping.",
                                                  "type": "object",
                                                  "required": ["fieldName"],
                                                  "properties": {
                                                    "fieldName": {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "target": {
                                    "description": "The target configuration for this relationship mapping.",
                                    "allOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/RelationshipMappingTarget",
                                        "title": "RelationshipMappingTarget",
                                        "description": "The target configuration for a relationship mapping.",
                                        "oneOf": [
                                          {
                                            "title": "TargetArgument",
                                            "type": "object",
                                            "required": ["argument"],
                                            "properties": {
                                              "argument": {
                                                "$id": "https://hasura.io/jsonschemas/metadata/ArgumentMappingTarget",
                                                "title": "ArgumentMappingTarget",
                                                "description": "An argument target for a relationship mapping.",
                                                "type": "object",
                                                "required": ["argumentName"],
                                                "properties": {
                                                  "argumentName": {
                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/arguments/items/properties/name"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          {
                                            "title": "TargetModelField",
                                            "type": "object",
                                            "required": ["modelField"],
                                            "properties": {
                                              "modelField": {
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/mapping/items/properties/source/allOf/0/oneOf/1/properties/fieldPath/items"
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "description": {
                              "description": "The description of the relationship. Gets added to the description of the relationship in the graphql schema.",
                              "type": ["string", "null"]
                            },
                            "deprecated": {
                              "description": "Whether this relationship is deprecated. If set, the deprecation status is added to the relationship field's graphql schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/Deprecated",
                                  "title": "Deprecated",
                                  "description": "OpenDd configuration to indicate whether an object type field, relationship, model root field or command root field is deprecated.",
                                  "type": "object",
                                  "properties": {
                                    "reason": {
                                      "description": "The reason for deprecation.",
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "graphql": {
                              "description": "Configuration for how this relationship should appear in the GraphQL schema.",
                              "anyOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/RelationshipGraphQlDefinition",
                                  "title": "RelationshipGraphQlDefinition",
                                  "description": "The definition of how a relationship appears in the GraphQL API",
                                  "type": "object",
                                  "properties": {
                                    "aggregateFieldName": {
                                      "description": "The field name to use for the field that represents an aggregate over the relationship",
                                      "anyOf": [
                                        {
                                          "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/TypePermissions",
                  "title": "TypePermissions",
                  "description": "Definition of permissions for an OpenDD type.",
                  "examples": [
                    {
                      "kind": "TypePermissions",
                      "version": "v1",
                      "definition": {
                        "typeName": "article",
                        "permissions": [
                          {
                            "role": "admin",
                            "output": {
                              "allowedFields": ["article_id", "author_id", "title"]
                            }
                          },
                          {
                            "role": "user",
                            "output": {
                              "allowedFields": ["article_id", "author_id"]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["TypePermissions"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/TypePermissionsV1",
                          "title": "TypePermissionsV1",
                          "description": "Definition of permissions for an OpenDD type.",
                          "type": "object",
                          "required": ["permissions", "typeName"],
                          "properties": {
                            "typeName": {
                              "description": "The name of the type for which permissions are being defined. Must be an object type.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "permissions": {
                              "description": "A list of type permissions, one for each role.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/TypePermission",
                                "title": "TypePermission",
                                "description": "Defines permissions for a particular role for a type.",
                                "examples": [
                                  {
                                    "role": "user",
                                    "output": {
                                      "allowedFields": ["article_id", "author_id"]
                                    },
                                    "input": {
                                      "fieldPresets": [
                                        {
                                          "field": "author_id",
                                          "value": {
                                            "sessionVariable": "x-hasura-user-id"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "type": "object",
                                "required": ["role"],
                                "properties": {
                                  "role": {
                                    "description": "The role for which permissions are being defined.",
                                    "allOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                      }
                                    ]
                                  },
                                  "output": {
                                    "description": "Permissions for this role when this type is used in an output context. If null, this type is inaccessible for this role in an output context.",
                                    "anyOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/TypeOutputPermission",
                                        "title": "TypeOutputPermission",
                                        "description": "Permissions for a type for a particular role when used in an output context.",
                                        "type": "object",
                                        "required": ["allowedFields"],
                                        "properties": {
                                          "allowedFields": {
                                            "description": "Fields of the type that are accessible for a role",
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                            },
                                            "uniqueItems": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "input": {
                                    "description": "Permissions for this role when this type is used in an input context. If null, this type is accessible for this role in an input context.",
                                    "anyOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/TypeInputPermission",
                                        "title": "TypeInputPermission",
                                        "description": "Permissions for a type for a particular role when used in an input context.",
                                        "type": "object",
                                        "properties": {
                                          "fieldPresets": {
                                            "description": "Preset values for fields of the type",
                                            "default": [],
                                            "type": "array",
                                            "items": {
                                              "$id": "https://hasura.io/jsonschemas/metadata/FieldPreset",
                                              "title": "FieldPreset",
                                              "description": "Preset value for a field",
                                              "type": "object",
                                              "required": ["field", "value"],
                                              "properties": {
                                                "field": {
                                                  "description": "Field name for preset",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "description": "Value for preset",
                                                  "allOf": [
                                                    {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/mapping/items/properties/source/allOf/0/oneOf/0/properties/value"
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/ModelPermissions",
                  "title": "ModelPermissions",
                  "description": "Definition of permissions for an OpenDD model.",
                  "examples": [
                    {
                      "kind": "ModelPermissions",
                      "version": "v1",
                      "definition": {
                        "modelName": "Articles",
                        "permissions": [
                          {
                            "role": "admin",
                            "select": {
                              "filter": null
                            }
                          },
                          {
                            "role": "user",
                            "select": {
                              "filter": {
                                "fieldComparison": {
                                  "field": "author_id",
                                  "operator": "_eq",
                                  "value": {
                                    "sessionVariable": "x-hasura-user-id"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["ModelPermissions"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/ModelPermissionsV1",
                          "title": "ModelPermissionsV1",
                          "description": "Definition of permissions for an OpenDD model.",
                          "type": "object",
                          "required": ["modelName", "permissions"],
                          "properties": {
                            "modelName": {
                              "description": "The name of the model for which permissions are being defined.",
                              "allOf": [
                                {
                                  "$id": "https://hasura.io/jsonschemas/metadata/ModelName",
                                  "title": "ModelName",
                                  "description": "The name of data model.",
                                  "type": "string",
                                  "pattern": "^[_a-zA-Z][_a-zA-Z0-9]*$"
                                }
                              ]
                            },
                            "permissions": {
                              "description": "A list of model permissions, one for each role.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/ModelPermission",
                                "title": "ModelPermission",
                                "description": "Defines the permissions for an OpenDD model.",
                                "examples": [
                                  {
                                    "role": "user",
                                    "select": {
                                      "filter": {
                                        "fieldComparison": {
                                          "field": "author_id",
                                          "operator": "_eq",
                                          "value": {
                                            "sessionVariable": "x-hasura-user-id"
                                          }
                                        }
                                      },
                                      "argument_presets": [
                                        {
                                          "field": "likes_dogs",
                                          "value": {
                                            "literal": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "type": "object",
                                "required": ["role"],
                                "properties": {
                                  "role": {
                                    "description": "The role for which permissions are being defined.",
                                    "allOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                      }
                                    ]
                                  },
                                  "select": {
                                    "description": "The permissions for selecting from this model for this role. If this is null, the role is not allowed to query the model.",
                                    "anyOf": [
                                      {
                                        "$id": "https://hasura.io/jsonschemas/metadata/SelectPermission",
                                        "title": "SelectPermission",
                                        "description": "Defines the permissions for selecting a model for a role.",
                                        "type": "object",
                                        "required": ["filter"],
                                        "properties": {
                                          "filter": {
                                            "description": "Filter expression when selecting rows for this model. Null filter implies all rows are selectable.",
                                            "allOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "$id": "https://hasura.io/jsonschemas/metadata/ModelPredicate",
                                                    "title": "ModelPredicate",
                                                    "description": "A predicate that can be used to restrict the objects returned when querying a model.",
                                                    "examples": [
                                                      {
                                                        "fieldComparison": {
                                                          "field": "author_id",
                                                          "operator": "_eq",
                                                          "value": {
                                                            "sessionVariable": "x-hasura-user-id"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "oneOf": [
                                                      {
                                                        "description": "Filters objects based on a field value.",
                                                        "type": "object",
                                                        "required": ["fieldComparison"],
                                                        "properties": {
                                                          "fieldComparison": {
                                                            "$id": "https://hasura.io/jsonschemas/metadata/FieldComparisonPredicate",
                                                            "title": "FieldComparisonPredicate",
                                                            "description": "Field comparison predicate filters objects based on a field value.",
                                                            "type": "object",
                                                            "required": ["field", "operator", "value"],
                                                            "properties": {
                                                              "field": {
                                                                "description": "The field name of the object type of the model to compare.",
                                                                "allOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                                  }
                                                                ]
                                                              },
                                                              "operator": {
                                                                "description": "The name of the operator to use for comparison.",
                                                                "allOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/4/oneOf/0/properties/definition/properties/comparableFields/items/properties/operators/oneOf/1/properties/enableSpecific/items"
                                                                  }
                                                                ]
                                                              },
                                                              "value": {
                                                                "description": "The value expression to compare against.",
                                                                "allOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/mapping/items/properties/source/allOf/0/oneOf/0/properties/value"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "required": ["fieldIsNull"],
                                                        "properties": {
                                                          "fieldIsNull": {
                                                            "$id": "https://hasura.io/jsonschemas/metadata/FieldIsNullPredicate",
                                                            "title": "FieldIsNullPredicate",
                                                            "description": "Predicate to check if the given field is null.",
                                                            "type": "object",
                                                            "required": ["field"],
                                                            "properties": {
                                                              "field": {
                                                                "description": "The name of the field that should be checked for a null value.",
                                                                "allOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/2/oneOf/0/properties/definition/properties/globalIdFields/items"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "description": "Filters objects based on the relationship of a model.",
                                                        "type": "object",
                                                        "required": ["relationship"],
                                                        "properties": {
                                                          "relationship": {
                                                            "$id": "https://hasura.io/jsonschemas/metadata/RelationshipPredicate",
                                                            "title": "RelationshipPredicate",
                                                            "description": "Relationship predicate filters objects of a source model based on a predicate on the related model.",
                                                            "type": "object",
                                                            "required": ["name"],
                                                            "properties": {
                                                              "name": {
                                                                "description": "The name of the relationship of the object type of the model to follow.",
                                                                "allOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/10/oneOf/0/properties/definition/properties/name/allOf/0"
                                                                  }
                                                                ]
                                                              },
                                                              "predicate": {
                                                                "description": "The predicate to apply on the related objects. If this is null, then the predicate evaluates to true as long as there is at least one related object present.",
                                                                "anyOf": [
                                                                  {
                                                                    "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/permissions/items/properties/select/anyOf/0/properties/filter/allOf/0/anyOf/1"
                                                                  },
                                                                  {
                                                                    "type": "null"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "additionalProperties": false
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "title": "And",
                                                        "description": "Evaluates to true if all sub-predicates evaluate to true.",
                                                        "type": "object",
                                                        "required": ["and"],
                                                        "properties": {
                                                          "and": {
                                                            "type": "array",
                                                            "items": {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/permissions/items/properties/select/anyOf/0/properties/filter/allOf/0/anyOf/1"
                                                            }
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "title": "Or",
                                                        "description": "Evaluates to true if any of the sub-predicates evaluate to true.",
                                                        "type": "object",
                                                        "required": ["or"],
                                                        "properties": {
                                                          "or": {
                                                            "type": "array",
                                                            "items": {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/permissions/items/properties/select/anyOf/0/properties/filter/allOf/0/anyOf/1"
                                                            }
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "title": "Not",
                                                        "description": "Evaluates to true if the sub-predicate evaluates to false.",
                                                        "type": "object",
                                                        "required": ["not"],
                                                        "properties": {
                                                          "not": {
                                                            "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/permissions/items/properties/select/anyOf/0/properties/filter/allOf/0/anyOf/1"
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "argumentPresets": {
                                            "description": "Preset values for arguments for this role",
                                            "default": [],
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/13/oneOf/0/properties/definition/properties/permissions/items/properties/argumentPresets/items"
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/CommandPermissions",
                  "title": "CommandPermissions",
                  "description": "Definition of permissions for an OpenDD command.",
                  "examples": [
                    {
                      "kind": "CommandPermissions",
                      "version": "v1",
                      "definition": {
                        "commandName": "get_article_by_id",
                        "permissions": [
                          {
                            "role": "admin",
                            "allowExecution": true
                          },
                          {
                            "role": "user",
                            "allowExecution": true
                          }
                        ]
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["CommandPermissions"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/CommandPermissionsV1",
                          "title": "CommandPermissionsV1",
                          "description": "Definition of permissions for an OpenDD command.",
                          "type": "object",
                          "required": ["commandName", "permissions"],
                          "properties": {
                            "commandName": {
                              "description": "The name of the command for which permissions are being defined.",
                              "allOf": [
                                {
                                  "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/9/oneOf/0/properties/definition/properties/name/allOf/0"
                                }
                              ]
                            },
                            "permissions": {
                              "description": "A list of command permissions, one for each role.",
                              "type": "array",
                              "items": {
                                "$id": "https://hasura.io/jsonschemas/metadata/CommandPermission",
                                "title": "CommandPermission",
                                "description": "Defines the permissions for a role for a command.",
                                "examples": [
                                  {
                                    "role": "user",
                                    "allowExecution": true,
                                    "argumentPresets": [
                                      {
                                        "argument": "user_id",
                                        "value": {
                                          "session_variable": "x-hasura-user_id"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "type": "object",
                                "required": ["allowExecution", "role"],
                                "properties": {
                                  "role": {
                                    "description": "The role for which permissions are being defined.",
                                    "allOf": [
                                      {
                                        "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/0/oneOf/1/oneOf/0/properties/definition/properties/allowRoleEmulationBy/anyOf/0"
                                      }
                                    ]
                                  },
                                  "allowExecution": {
                                    "description": "Whether the command is executable by the role.",
                                    "type": "boolean"
                                  },
                                  "argumentPresets": {
                                    "description": "Preset values for arguments for this role",
                                    "default": [],
                                    "type": "array",
                                    "items": {
                                      "$id": "https://hasura.io/jsonschemas/metadata/ArgumentPreset",
                                      "title": "ArgumentPreset",
                                      "description": "Preset value for an argument",
                                      "type": "object",
                                      "required": ["argument", "value"],
                                      "properties": {
                                        "argument": {
                                          "description": "Argument name for preset",
                                          "allOf": [
                                            {
                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/8/oneOf/0/properties/definition/properties/arguments/items/properties/name"
                                            }
                                          ]
                                        },
                                        "value": {
                                          "description": "Value for preset",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/ValueExpressionOrPredicate",
                                              "title": "ValueExpressionOrPredicate",
                                              "description": "An expression which evaluates to a value that can be used in permissions and various presets.",
                                              "oneOf": [
                                                {
                                                  "title": "Literal",
                                                  "type": "object",
                                                  "required": ["literal"],
                                                  "properties": {
                                                    "literal": true
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "SessionVariable",
                                                  "type": "object",
                                                  "required": ["sessionVariable"],
                                                  "properties": {
                                                    "sessionVariable": {
                                                      "description": "Used to represent the name of a session variable, like \"x-hasura-role\".",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                {
                                                  "title": "BooleanExpression",
                                                  "type": "object",
                                                  "required": ["booleanExpression"],
                                                  "properties": {
                                                    "booleanExpression": {
                                                      "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/12/oneOf/0/properties/definition/properties/permissions/items/properties/select/anyOf/0/properties/filter/allOf/0/anyOf/1"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                {
                  "$id": "https://hasura.io/jsonschemas/metadata/LifecyclePluginHook",
                  "title": "LifecyclePluginHook",
                  "description": "Definition of a lifecycle plugin hook.",
                  "examples": [
                    {
                      "kind": "LifecyclePluginHook",
                      "version": "v1",
                      "definition": {
                        "pre": "parse",
                        "name": "test",
                        "url": {
                          "value": "http://localhost:8080"
                        },
                        "config": {
                          "request": {
                            "headers": {
                              "additional": {
                                "hasura-m-auth": {
                                  "value": "zZkhKqFjqXR4g5MZCsJUZCnhCcoPyZ"
                                }
                              }
                            },
                            "session": {},
                            "rawRequest": {
                              "query": {},
                              "variables": {}
                            }
                          }
                        }
                      }
                    }
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "required": ["definition", "kind", "version"],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": ["LifecyclePluginHook"]
                        },
                        "version": {
                          "type": "string",
                          "enum": ["v1"]
                        },
                        "definition": {
                          "$id": "https://hasura.io/jsonschemas/metadata/LifecyclePluginHookV1",
                          "title": "LifecyclePluginHookV1",
                          "description": "Definition of a lifecycle plugin hook - version 1.",
                          "oneOf": [
                            {
                              "title": "LifecyclePluginHookPreParse",
                              "description": "Definition of a lifecycle plugin hook for the pre-parse stage.",
                              "type": "object",
                              "required": ["config", "name", "pre", "url"],
                              "properties": {
                                "pre": {
                                  "type": "string",
                                  "enum": ["parse"]
                                },
                                "name": {
                                  "description": "The name of the lifecycle plugin hook.",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "The URL to access the lifecycle plugin hook.",
                                  "allOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/EnvironmentValue",
                                      "title": "EnvironmentValue",
                                      "description": "Either a literal string or a reference to a Hasura secret",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": ["value"],
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "required": ["valueFromEnv"],
                                          "properties": {
                                            "valueFromEnv": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "config": {
                                  "description": "Configuration for the lifecycle plugin hook.",
                                  "allOf": [
                                    {
                                      "$id": "https://hasura.io/jsonschemas/metadata/LifecyclePluginHookConfig",
                                      "title": "LifecyclePluginHookConfig",
                                      "description": "Configuration for a lifecycle plugin hook.",
                                      "type": "object",
                                      "required": ["request"],
                                      "properties": {
                                        "request": {
                                          "description": "Configuration for the request to the lifecycle plugin hook.",
                                          "allOf": [
                                            {
                                              "$id": "https://hasura.io/jsonschemas/metadata/LifecyclePluginHookConfigRequest",
                                              "title": "LifecyclePluginHookConfigRequest",
                                              "description": "Configuration for a lifecycle plugin hook request.",
                                              "type": "object",
                                              "required": ["rawRequest"],
                                              "properties": {
                                                "headers": {
                                                  "description": "Configuration for the headers.",
                                                  "anyOf": [
                                                    {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/LifecyclePluginHookHeadersConfig",
                                                      "title": "LifecyclePluginHookHeadersConfig",
                                                      "description": "Configuration for a lifecycle plugin hook headers.",
                                                      "type": "object",
                                                      "properties": {
                                                        "additional": {
                                                          "description": "Additional headers to be sent with the request.",
                                                          "anyOf": [
                                                            {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/0/oneOf/0/properties/definition/properties/headers/allOf/0"
                                                            },
                                                            {
                                                              "type": "null"
                                                            }
                                                          ]
                                                        },
                                                        "forward": {
                                                          "description": "Headers to be forwarded from the incoming request.",
                                                          "default": [],
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "session": {
                                                  "description": "Configuration for the session (includes roles and session variables).",
                                                  "anyOf": [
                                                    {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/LeafConfig",
                                                      "title": "LeafConfig",
                                                      "description": "Leaf Configuration.",
                                                      "type": "object",
                                                      "additionalProperties": false
                                                    },
                                                    {
                                                      "type": "null"
                                                    }
                                                  ]
                                                },
                                                "rawRequest": {
                                                  "description": "Configuration for the raw request.",
                                                  "allOf": [
                                                    {
                                                      "$id": "https://hasura.io/jsonschemas/metadata/RawRequestConfig",
                                                      "title": "RawRequestConfig",
                                                      "description": "Configuration for the raw request.",
                                                      "type": "object",
                                                      "properties": {
                                                        "query": {
                                                          "description": "Configuration for the query.",
                                                          "anyOf": [
                                                            {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/config/allOf/0/properties/request/allOf/0/properties/session/anyOf/0"
                                                            },
                                                            {
                                                              "type": "null"
                                                            }
                                                          ]
                                                        },
                                                        "variables": {
                                                          "description": "Configuration for the variables.",
                                                          "anyOf": [
                                                            {
                                                              "$ref": "#/definitions/SubgraphObject/anyOf/0/anyOf/1/oneOf/14/oneOf/0/properties/definition/oneOf/0/properties/config/allOf/0/properties/request/allOf/0/properties/session/anyOf/0"
                                                            },
                                                            {
                                                              "type": "null"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  }
}
